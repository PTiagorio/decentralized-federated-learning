{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes[112]",
          "name": "secret",
          "type": "bytes[112]"
        }
      ],
      "name": "acceptNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeNodes",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "declineNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNodeRequestsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getNodeSecret",
      "outputs": [
        {
          "internalType": "bytes[112]",
          "name": "",
          "type": "bytes[112]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNodesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isNode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyTurn",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nodeRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKey",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nodeState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nodesArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activated",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "entryKeyTurn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "publicKey",
          "type": "bytes32"
        }
      ],
      "name": "requestJoinNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "9": "contracts/project/DataProviders.sol"
  },
  "ast": {
    "absolutePath": "contracts/project/DataProviders.sol",
    "exportedSymbols": {
      "DataProviders": [
        918
      ]
    },
    "id": 919,
    "license": "GPL3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 579,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DataProviders",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 580,
          "nodeType": "StructuredDocumentation",
          "src": "58:94:9",
          "text": " @dev Reference data providers in the project and their requests to join the project"
        },
        "fullyImplemented": true,
        "id": 918,
        "linearizedBaseContracts": [
          918
        ],
        "name": "DataProviders",
        "nameLocation": "162:13:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "DataProviders.Node",
            "id": 591,
            "members": [
              {
                "constant": false,
                "id": 582,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "247:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "239:16:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 581,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "239:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 584,
                "mutability": "mutable",
                "name": "activated",
                "nameLocation": "270:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "265:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 583,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "265:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 588,
                "mutability": "mutable",
                "name": "secret",
                "nameLocation": "398:6:9",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "387:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes_storage_$112_storage_ptr",
                  "typeString": "bytes[112]"
                },
                "typeName": {
                  "baseType": {
                    "id": 585,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "id": 587,
                  "length": {
                    "hexValue": "313132",
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "393:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_112_by_1",
                      "typeString": "int_const 112"
                    },
                    "value": "112"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "387:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_storage_$112_storage_ptr",
                    "typeString": "bytes[112]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "entryKeyTurn",
                "nameLocation": "484:12:9",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "479:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 589,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "479:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Node",
            "nameLocation": "224:4:9",
            "nodeType": "StructDefinition",
            "scope": 918,
            "src": "217:286:9",
            "visibility": "public"
          },
          {
            "canonicalName": "DataProviders.NodeJoinRequest",
            "id": 596,
            "members": [
              {
                "constant": false,
                "id": 593,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "550:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 596,
                "src": "542:16:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 592,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "542:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 595,
                "mutability": "mutable",
                "name": "publicKey",
                "nameLocation": "576:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 596,
                "src": "568:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 594,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "568:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NodeJoinRequest",
            "nameLocation": "516:15:9",
            "nodeType": "StructDefinition",
            "scope": 918,
            "src": "509:83:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8518a047",
            "id": 600,
            "mutability": "mutable",
            "name": "nodeState",
            "nameLocation": "807:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "775:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 599,
              "keyType": {
                "id": 597,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "783:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "775:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 598,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "794:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c4e10a14",
            "id": 604,
            "mutability": "mutable",
            "name": "nodesArray",
            "nameLocation": "836:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "822:24:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
              "typeString": "struct DataProviders.Node[]"
            },
            "typeName": {
              "baseType": {
                "id": 602,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 601,
                  "name": "Node",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 591,
                  "src": "822:4:9"
                },
                "referencedDeclaration": 591,
                "src": "822:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Node_$591_storage_ptr",
                  "typeString": "struct DataProviders.Node"
                }
              },
              "id": 603,
              "nodeType": "ArrayTypeName",
              "src": "822:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage_ptr",
                "typeString": "struct DataProviders.Node[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07f19651",
            "id": 607,
            "mutability": "mutable",
            "name": "activeNodes",
            "nameLocation": "866:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "852:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 605,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "852:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 606,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "880:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ba7925cb",
            "id": 610,
            "mutability": "mutable",
            "name": "keyTurn",
            "nameLocation": "901:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "887:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 608,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "887:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 609,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "911:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f2690a5",
            "id": 614,
            "mutability": "mutable",
            "name": "nodeRequests",
            "nameLocation": "1031:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 918,
            "src": "1006:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
              "typeString": "struct DataProviders.NodeJoinRequest[]"
            },
            "typeName": {
              "baseType": {
                "id": 612,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 611,
                  "name": "NodeJoinRequest",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 596,
                  "src": "1006:15:9"
                },
                "referencedDeclaration": 596,
                "src": "1006:15:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NodeJoinRequest_$596_storage_ptr",
                  "typeString": "struct DataProviders.NodeJoinRequest"
                }
              },
              "id": 613,
              "nodeType": "ArrayTypeName",
              "src": "1006:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage_ptr",
                "typeString": "struct DataProviders.NodeJoinRequest[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "1069:132:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 618,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1107:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1107:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 617,
                          "name": "isNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "1100:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1100:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206e6f6465732061726520616c6c6f77656420746f206578656375746520746869732e",
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1132:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e87ff14f77ccc15c831d0b072ddd3cbfb1582b197d4e6f8af7fc350b0f4c575",
                          "typeString": "literal_string \"Only nodes are allowed to execute this.\""
                        },
                        "value": "Only nodes are allowed to execute this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e87ff14f77ccc15c831d0b072ddd3cbfb1582b197d4e6f8af7fc350b0f4c575",
                          "typeString": "literal_string \"Only nodes are allowed to execute this.\""
                        }
                      ],
                      "id": 616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1079:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1079:104:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:104:9"
                },
                {
                  "id": 624,
                  "nodeType": "PlaceholderStatement",
                  "src": "1193:1:9"
                }
              ]
            },
            "id": 626,
            "name": "onlyNode",
            "nameLocation": "1060:8:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:9"
            },
            "src": "1051:150:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "1231:199:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 630,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1269:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1269:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 629,
                            "name": "isNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "1262:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1262:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 633,
                              "name": "nodesArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "1284:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                                "typeString": "struct DataProviders.Node storage ref[] storage ref"
                              }
                            },
                            "id": 640,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 634,
                                  "name": "nodeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 600,
                                  "src": "1295:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 637,
                                "indexExpression": {
                                  "expression": {
                                    "id": 635,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1305:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1305:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1295:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1319:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "1295:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1284:37:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$591_storage",
                              "typeString": "struct DataProviders.Node storage ref"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 584,
                          "src": "1284:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1262:69:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206e6f646573207468617420617265206163746976652061726520616c6c6f77656420746f206578656375746520746869732e",
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:57:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_895b2a9d8b205d66d989c8076a354a771d518fb8754509d15078384b0f0a8a21",
                          "typeString": "literal_string \"Only nodes that are active are allowed to execute this.\""
                        },
                        "value": "Only nodes that are active are allowed to execute this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_895b2a9d8b205d66d989c8076a354a771d518fb8754509d15078384b0f0a8a21",
                          "typeString": "literal_string \"Only nodes that are active are allowed to execute this.\""
                        }
                      ],
                      "id": 628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1241:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:171:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:171:9"
                },
                {
                  "id": 646,
                  "nodeType": "PlaceholderStatement",
                  "src": "1422:1:9"
                }
              ]
            },
            "id": 648,
            "name": "onlyActiveNode",
            "nameLocation": "1216:14:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:0:9"
            },
            "src": "1207:223:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "1606:48:9",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 656,
                        "name": "nodeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "1623:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 658,
                      "indexExpression": {
                        "id": 657,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "1633:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1623:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1646:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "1623:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 655,
                  "id": 661,
                  "nodeType": "Return",
                  "src": "1616:31:9"
                }
              ]
            },
            "documentation": {
              "id": 649,
              "nodeType": "StructuredDocumentation",
              "src": "1436:105:9",
              "text": " @notice Check if given address belongs to node\n @param _address address to check"
            },
            "functionSelector": "01750152",
            "id": 663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNode",
            "nameLocation": "1555:6:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1570:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "1562:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1562:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1561:18:9"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "1600:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1599:6:9"
            },
            "scope": 918,
            "src": "1546:108:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "1712:41:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 668,
                      "name": "nodesArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "1729:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                        "typeString": "struct DataProviders.Node storage ref[] storage ref"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1729:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 667,
                  "id": 670,
                  "nodeType": "Return",
                  "src": "1722:24:9"
                }
              ]
            },
            "functionSelector": "1821aa62",
            "id": 672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNodesLength",
            "nameLocation": "1669:14:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1683:2:9"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "1706:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1705:6:9"
            },
            "scope": 918,
            "src": "1660:93:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "1818:43:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 677,
                      "name": "nodeRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "1835:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                        "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1835:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 676,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "1828:26:9"
                }
              ]
            },
            "functionSelector": "13029e03",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNodeRequestsLength",
            "nameLocation": "1768:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:9"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1812:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1811:6:9"
            },
            "scope": 918,
            "src": "1759:102:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "1947:135:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 692,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 683,
                            "src": "1972:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 691,
                          "name": "isNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "1965:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1965:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320646f65736e27742062656c6f6e6720746f206e6f6465",
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1983:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d4cb0f5863422fa179a5e389488ed5ae43e228df4ae8ceedbf55ae7e5d1bb0",
                          "typeString": "literal_string \"Address doesn't belong to node\""
                        },
                        "value": "Address doesn't belong to node"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d4cb0f5863422fa179a5e389488ed5ae43e228df4ae8ceedbf55ae7e5d1bb0",
                          "typeString": "literal_string \"Address doesn't belong to node\""
                        }
                      ],
                      "id": 690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1957:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:59:9"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 697,
                        "name": "nodesArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "2033:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                          "typeString": "struct DataProviders.Node storage ref[] storage ref"
                        }
                      },
                      "id": 703,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 698,
                            "name": "nodeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "2044:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 700,
                          "indexExpression": {
                            "id": 699,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 683,
                            "src": "2054:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2044:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2066:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "2044:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2033:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Node_$591_storage",
                        "typeString": "struct DataProviders.Node storage ref"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "secret",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 588,
                    "src": "2033:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$112_storage",
                      "typeString": "bytes storage ref[112] storage ref"
                    }
                  },
                  "functionReturnParameters": 689,
                  "id": 705,
                  "nodeType": "Return",
                  "src": "2026:49:9"
                }
              ]
            },
            "functionSelector": "4244609b",
            "id": 707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNodeSecret",
            "nameLocation": "1876:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1898:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "1890:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1889:18:9"
            },
            "returnParameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "1928:17:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$112_memory_ptr",
                    "typeString": "bytes[112]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 685,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1928:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 687,
                    "length": {
                      "hexValue": "313132",
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1934:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_112_by_1",
                        "typeString": "int_const 112"
                      },
                      "value": "112"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1928:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$112_storage_ptr",
                      "typeString": "bytes[112]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1927:19:9"
            },
            "scope": 918,
            "src": "1867:215:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "2275:244:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 714,
                            "name": "nodeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "2293:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 717,
                          "indexExpression": {
                            "expression": {
                              "id": 715,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2303:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2303:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2293:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2318:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2293:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320616c7265616479206d61646520726571756573742e",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2321:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_092e297cabe551a3e1de1e6432ab0b15ab311f2c7c4cf244c4e772c83c8cfd25",
                          "typeString": "literal_string \"Address already made request.\""
                        },
                        "value": "Address already made request."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_092e297cabe551a3e1de1e6432ab0b15ab311f2c7c4cf244c4e772c83c8cfd25",
                          "typeString": "literal_string \"Address already made request.\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2285:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2285:68:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "2285:68:9"
                },
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 723,
                        "name": "nodeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "2363:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 726,
                      "indexExpression": {
                        "expression": {
                          "id": 724,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2373:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2373:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2363:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2387:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2363:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 734,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2456:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2456:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 736,
                            "name": "publicKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "2491:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 733,
                          "name": "NodeJoinRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "2416:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NodeJoinRequest_$596_storage_ptr_$",
                            "typeString": "type(struct DataProviders.NodeJoinRequest storage pointer)"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "_address",
                          "publicKey"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2416:95:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeJoinRequest_$596_memory_ptr",
                          "typeString": "struct DataProviders.NodeJoinRequest memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NodeJoinRequest_$596_memory_ptr",
                          "typeString": "struct DataProviders.NodeJoinRequest memory"
                        }
                      ],
                      "expression": {
                        "id": 730,
                        "name": "nodeRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "2398:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                          "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2398:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage_ptr_$_t_struct$_NodeJoinRequest_$596_storage_$returns$__$bound_to$_t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct DataProviders.NodeJoinRequest storage ref[] storage pointer,struct DataProviders.NodeJoinRequest storage ref)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:114:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:114:9"
                }
              ]
            },
            "documentation": {
              "id": 708,
              "nodeType": "StructuredDocumentation",
              "src": "2088:131:9",
              "text": " @notice Node can request to join providing their public key.\n @param publicKey compressed public key value"
            },
            "functionSelector": "94613cd7",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJoinNode",
            "nameLocation": "2233:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "publicKey",
                  "nameLocation": "2257:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "2249:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2248:19:9"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2275:0:9"
            },
            "scope": 918,
            "src": "2224:295:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "2912:448:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 752,
                            "name": "nodeRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "2930:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                              "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2930:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2952:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2930:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207265717565737420746f2070726f636573732e",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2955:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1520500dae358e6700849773abef2fc79bfa6701385fbcdddba4e96290c7555b",
                          "typeString": "literal_string \"No request to process.\""
                        },
                        "value": "No request to process."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1520500dae358e6700849773abef2fc79bfa6701385fbcdddba4e96290c7555b",
                          "typeString": "literal_string \"No request to process.\""
                        }
                      ],
                      "id": 751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2922:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2922:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "2922:58:9"
                },
                {
                  "expression": {
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 759,
                        "name": "nodeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "2990:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 767,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 760,
                            "name": "nodeRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "3000:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                              "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                            }
                          },
                          "id": 765,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 761,
                                "name": "nodeRequests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 614,
                                "src": "3013:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                                  "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3013:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3035:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3013:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3000:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeJoinRequest_$596_storage",
                            "typeString": "struct DataProviders.NodeJoinRequest storage ref"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 593,
                        "src": "3000:46:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2990:57:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 768,
                          "name": "nodesArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "3050:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                            "typeString": "struct DataProviders.Node storage ref[] storage ref"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3050:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3070:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "3050:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2990:81:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:81:9"
                },
                {
                  "expression": {
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 774,
                      "name": "keyTurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "3082:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3093:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3082:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:12:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 782,
                                "name": "nodeRequests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 614,
                                "src": "3149:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                                  "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                                }
                              },
                              "id": 787,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 783,
                                    "name": "nodeRequests",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 614,
                                    "src": "3162:12:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                                      "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                                    }
                                  },
                                  "id": 784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3162:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3184:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3162:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3149:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeJoinRequest_$596_storage",
                                "typeString": "struct DataProviders.NodeJoinRequest storage ref"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 593,
                            "src": "3149:46:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3220:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "id": 790,
                            "name": "secret",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "3246:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$112_memory_ptr",
                              "typeString": "bytes memory[112] memory"
                            }
                          },
                          {
                            "id": 791,
                            "name": "keyTurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "3280:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$112_memory_ptr",
                              "typeString": "bytes memory[112] memory"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 781,
                          "name": "Node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "3120:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Node_$591_storage_ptr_$",
                            "typeString": "type(struct DataProviders.Node storage pointer)"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "_address",
                          "activated",
                          "secret",
                          "entryKeyTurn"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3120:178:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$591_memory_ptr",
                          "typeString": "struct DataProviders.Node memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Node_$591_memory_ptr",
                          "typeString": "struct DataProviders.Node memory"
                        }
                      ],
                      "expression": {
                        "id": 778,
                        "name": "nodesArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "3104:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                          "typeString": "struct DataProviders.Node storage ref[] storage ref"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3104:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Node_$591_storage_$dyn_storage_ptr_$_t_struct$_Node_$591_storage_$returns$__$bound_to$_t_array$_t_struct$_Node_$591_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct DataProviders.Node storage ref[] storage pointer,struct DataProviders.Node storage ref)"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:195:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:195:9"
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 795,
                      "name": "activeNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "3309:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3324:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3309:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:16:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 799,
                        "name": "nodeRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "3335:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                          "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                        }
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "3335:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct DataProviders.NodeJoinRequest storage ref[] storage pointer)"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:18:9"
                }
              ]
            },
            "documentation": {
              "id": 742,
              "nodeType": "StructuredDocumentation",
              "src": "2525:320:9",
              "text": " @notice Accepting first request in the stack\n @param secret sharing encrypted common secret for nodes\nTODO: Secret should be updated as hash of previous secret\nSo that the node doesn't have access to previous models\nTODO: Should not accept node when plan is running"
            },
            "functionSelector": "e27c87a0",
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 749,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 748,
                  "name": "onlyNode",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 626,
                  "src": "2903:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2903:8:9"
              }
            ],
            "name": "acceptNode",
            "nameLocation": "2859:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "secret",
                  "nameLocation": "2888:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "2870:24:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$112_memory_ptr",
                    "typeString": "bytes[112]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 743,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2870:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 745,
                    "length": {
                      "hexValue": "313132",
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2876:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_112_by_1",
                        "typeString": "int_const 112"
                      },
                      "value": "112"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2870:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$112_storage_ptr",
                      "typeString": "bytes[112]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2869:26:9"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2912:0:9"
            },
            "scope": 918,
            "src": "2850:510:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "3473:174:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 812,
                            "name": "nodeRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "3491:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                              "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                            }
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3491:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3513:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3491:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207265717565737420746f2070726f636573732e",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3516:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1520500dae358e6700849773abef2fc79bfa6701385fbcdddba4e96290c7555b",
                          "typeString": "literal_string \"No request to process.\""
                        },
                        "value": "No request to process."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1520500dae358e6700849773abef2fc79bfa6701385fbcdddba4e96290c7555b",
                          "typeString": "literal_string \"No request to process.\""
                        }
                      ],
                      "id": 811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3483:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:58:9"
                },
                {
                  "expression": {
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 819,
                        "name": "nodeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "3551:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 827,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 820,
                            "name": "nodeRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "3561:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                              "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                            }
                          },
                          "id": 825,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 821,
                                "name": "nodeRequests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 614,
                                "src": "3574:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                                  "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                                }
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3574:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3596:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3574:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeJoinRequest_$596_storage",
                            "typeString": "struct DataProviders.NodeJoinRequest storage ref"
                          }
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 593,
                        "src": "3561:46:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3551:57:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3611:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3551:61:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:61:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 831,
                        "name": "nodeRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "3622:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage",
                          "typeString": "struct DataProviders.NodeJoinRequest storage ref[] storage ref"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "3622:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_NodeJoinRequest_$596_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct DataProviders.NodeJoinRequest storage ref[] storage pointer)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3622:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "3622:18:9"
                }
              ]
            },
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "3366:63:9",
              "text": " @notice Declining first request in the stack"
            },
            "functionSelector": "72ab489f",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 809,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 808,
                  "name": "onlyNode",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 626,
                  "src": "3464:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3464:8:9"
              }
            ],
            "name": "declineNode",
            "nameLocation": "3443:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3454:2:9"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3473:0:9"
            },
            "scope": 918,
            "src": "3434:213:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "3742:199:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3773:48:9",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 844,
                              "name": "nodesArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "3774:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                                "typeString": "struct DataProviders.Node storage ref[] storage ref"
                              }
                            },
                            "id": 851,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 845,
                                  "name": "nodeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 600,
                                  "src": "3785:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 848,
                                "indexExpression": {
                                  "expression": {
                                    "id": 846,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3795:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3795:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3785:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3809:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "3785:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3774:37:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$591_storage",
                              "typeString": "struct DataProviders.Node storage ref"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 584,
                          "src": "3774:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f646520697320616c7265616479206163746976652e",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3835:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f835e1d423a8c1bac9621d82af2f7a5848062937677b70debc328a90de63dfbb",
                          "typeString": "literal_string \"Node is already active.\""
                        },
                        "value": "Node is already active."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f835e1d423a8c1bac9621d82af2f7a5848062937677b70debc328a90de63dfbb",
                          "typeString": "literal_string \"Node is already active.\""
                        }
                      ],
                      "id": 843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3752:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3752:118:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "3752:118:9"
                },
                {
                  "expression": {
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 857,
                          "name": "nodesArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "3880:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                            "typeString": "struct DataProviders.Node storage ref[] storage ref"
                          }
                        },
                        "id": 864,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 858,
                              "name": "nodeState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "3891:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 861,
                            "indexExpression": {
                              "expression": {
                                "id": 859,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3901:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3901:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3891:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3915:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "3891:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3880:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$591_storage",
                          "typeString": "struct DataProviders.Node storage ref"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 584,
                      "src": "3880:47:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3930:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3880:54:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "3880:54:9"
                }
              ]
            },
            "documentation": {
              "id": 838,
              "nodeType": "StructuredDocumentation",
              "src": "3653:48:9",
              "text": " @notice Node activates itself"
            },
            "functionSelector": "0f15f4c0",
            "id": 870,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 841,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 840,
                  "name": "onlyNode",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 626,
                  "src": "3733:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3733:8:9"
              }
            ],
            "name": "activate",
            "nameLocation": "3715:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:9"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3742:0:9"
            },
            "scope": 918,
            "src": "3706:235:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 879,
              "nodeType": "Block",
              "src": "4120:44:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 875,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4146:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4146:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 874,
                      "name": "_deactivateNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "4130:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 878,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:27:9"
                }
              ]
            },
            "documentation": {
              "id": 871,
              "nodeType": "StructuredDocumentation",
              "src": "3947:139:9",
              "text": " @notice Node deactivates itself\n @dev onlyNode modifier is not required. It is checked inside _deactivateNode(...)"
            },
            "functionSelector": "51b42b00",
            "id": 880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deactivate",
            "nameLocation": "4100:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4110:2:9"
            },
            "returnParameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4120:0:9"
            },
            "scope": 918,
            "src": "4091:73:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "4425:294:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 888,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "4463:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 887,
                          "name": "isNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "4456:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4456:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973206e6f742076616c6964206e6f64652e",
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4486:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ec87ffcb7d9d02499ec81347aa92ce9697ed04dc3b84e2979f8eebca06913f2",
                          "typeString": "literal_string \"Address is not valid node.\""
                        },
                        "value": "Address is not valid node."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ec87ffcb7d9d02499ec81347aa92ce9697ed04dc3b84e2979f8eebca06913f2",
                          "typeString": "literal_string \"Address is not valid node.\""
                        }
                      ],
                      "id": 886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4435:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4435:89:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "4435:89:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 894,
                            "name": "nodesArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 604,
                            "src": "4555:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                              "typeString": "struct DataProviders.Node storage ref[] storage ref"
                            }
                          },
                          "id": 900,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 895,
                                "name": "nodeState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 600,
                                "src": "4566:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 897,
                              "indexExpression": {
                                "id": 896,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 883,
                                "src": "4576:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4566:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "33",
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4588:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "src": "4566:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4555:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$591_storage",
                            "typeString": "struct DataProviders.Node storage ref"
                          }
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 584,
                        "src": "4555:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f646520697320616c726561647920696e616374697665",
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4614:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87eef195dd0e59b8fe3628173df2dedcb1d96ecc358094acdba4e51f156ee80e",
                          "typeString": "literal_string \"Node is already inactive\""
                        },
                        "value": "Node is already inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87eef195dd0e59b8fe3628173df2dedcb1d96ecc358094acdba4e51f156ee80e",
                          "typeString": "literal_string \"Node is already inactive\""
                        }
                      ],
                      "id": 893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4534:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4534:116:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "4534:116:9"
                },
                {
                  "expression": {
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 905,
                          "name": "nodesArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "4660:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Node_$591_storage_$dyn_storage",
                            "typeString": "struct DataProviders.Node storage ref[] storage ref"
                          }
                        },
                        "id": 911,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 906,
                              "name": "nodeState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "4671:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 908,
                            "indexExpression": {
                              "id": 907,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 883,
                              "src": "4681:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4671:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4693:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "4671:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4660:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$591_storage",
                          "typeString": "struct DataProviders.Node storage ref"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 584,
                      "src": "4660:45:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4708:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4660:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "4660:52:9"
                }
              ]
            },
            "documentation": {
              "id": 881,
              "nodeType": "StructuredDocumentation",
              "src": "4170:198:9",
              "text": " @notice Deactivate node by address\n @dev We will use this later in the training plan - kick inactive nodes\n @param _address address of node which should be deactivated"
            },
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deactivateNode",
            "nameLocation": "4382:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4406:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "4398:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4397:18:9"
            },
            "returnParameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4425:0:9"
            },
            "scope": 918,
            "src": "4373:346:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 919,
        "src": "153:4568:9",
        "usedErrors": []
      }
    ],
    "src": "33:4689:9"
  },
  "bytecode": "",
  "bytecodeSha1": "9a59e7aa002cce0ad0a6c8f81603ef8a6308578e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "DataProviders",
  "coverageMap": {
    "branches": {
      "9": {
        "DataProviders._deactivateNode": {
          "27": [
            4456,
            4472,
            true
          ],
          "28": [
            4555,
            4600,
            true
          ]
        },
        "DataProviders.acceptNode": {
          "26": [
            1100,
            1118,
            true
          ]
        },
        "DataProviders.activate": {
          "23": [
            3773,
            3821,
            true
          ]
        },
        "DataProviders.getNodeSecret": {
          "24": [
            1965,
            1981,
            true
          ]
        },
        "DataProviders.requestJoinNode": {
          "25": [
            2293,
            2319,
            true
          ]
        }
      }
    },
    "statements": {
      "9": {
        "DataProviders._deactivateNode": {
          "20": [
            4435,
            4524
          ],
          "21": [
            4534,
            4650
          ],
          "22": [
            4660,
            4712
          ]
        },
        "DataProviders.acceptNode": {
          "14": [
            2922,
            2980
          ],
          "15": [
            2990,
            3071
          ],
          "16": [
            3082,
            3094
          ],
          "17": [
            3104,
            3299
          ],
          "18": [
            3309,
            3325
          ],
          "19": [
            3335,
            3353
          ]
        },
        "DataProviders.activate": {
          "3": [
            3752,
            3870
          ],
          "4": [
            3880,
            3934
          ]
        },
        "DataProviders.deactivate": {
          "7": [
            4130,
            4157
          ]
        },
        "DataProviders.declineNode": {
          "8": [
            3483,
            3541
          ],
          "9": [
            3551,
            3612
          ],
          "10": [
            3622,
            3640
          ]
        },
        "DataProviders.getNodeRequestsLength": {
          "0": [
            1828,
            1854
          ]
        },
        "DataProviders.getNodeSecret": {
          "5": [
            1957,
            2016
          ],
          "6": [
            2026,
            2075
          ]
        },
        "DataProviders.getNodesLength": {
          "1": [
            1722,
            1746
          ]
        },
        "DataProviders.isNode": {
          "2": [
            1616,
            1647
          ]
        },
        "DataProviders.requestJoinNode": {
          "11": [
            2285,
            2353
          ],
          "12": [
            2363,
            2388
          ],
          "13": [
            2398,
            2512
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "153:4568:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:108;;;;;;:::i;:::-;;:::i;:::-;;;470:14:11;;463:22;445:41;;433:2;418:18;1546:108:9;;;;;;;;852:29;;;;;;;;;;;;671:10:11;659:23;;;641:42;;629:2;614:18;852:29:9;497:192:11;3706:235:9;;;:::i;:::-;;1759:102;1835:12;:19;1759:102;;;840:25:11;;;828:2;813:18;1759:102:9;694:177:11;1660:93:9;1729:10;:17;1660:93;;1867:215;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4091:73::-;;;:::i;1006:37::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2423:32:11;;;2405:51;;2487:2;2472:18;;2465:34;;;;2378:18;1006:37:9;2231:274:11;3434:213:9;;;:::i;775:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;2224:295;;;;;;:::i;:::-;;:::i;887:25::-;;;;;;;;;;;;822:24;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2909:32:11;;;2891:51;;2985:14;;2978:22;2973:2;2958:18;;2951:50;3017:18;;;3010:34;2879:2;2864:18;822:24:9;2695:355:11;2850:510:9;;;;;;:::i;:::-;;:::i;1546:108::-;-1:-1:-1;;;;;1623:19:9;1600:4;1623:19;;;;;;;;;;;1646:1;-1:-1:-1;1623:24:9;;1546:108::o;3706:235::-;1100:18;1107:10;1100:6;:18::i;:::-;1079:104;;;;-1:-1:-1;;;1079:104:9;;;;;;;:::i;:::-;;;;;;;;;3795:10:::1;3785:9;:21:::0;;;::::1;::::0;;;;;;;3774:10:::1;::::0;3785:25:::1;::::0;3809:1:::1;::::0;3785:25:::1;:::i;:::-;3774:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:47:::0;-1:-1:-1;;;3774:47:9;::::1;;;3773:48;3752:118;;;::::0;-1:-1:-1;;;3752:118:9;;6301:2:11;3752:118:9::1;::::0;::::1;6283:21:11::0;6340:2;6320:18;;;6313:30;6379:25;6359:18;;;6352:53;6422:18;;3752:118:9::1;6099:347:11::0;3752:118:9::1;3901:10;3891:9;:21:::0;;;::::1;::::0;;;;;;;3930:4:::1;::::0;;;3891:25:::1;::::0;3915:1:::1;::::0;3891:25:::1;:::i;:::-;3880:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:54:::0;;;::::1;;-1:-1:-1::0;;;3880:54:9::1;-1:-1:-1::0;;;;3880:54:9;;::::1;::::0;;;::::1;::::0;;3706:235::o;1867:215::-;1928:17;;:::i;:::-;1965:16;1972:8;1965:6;:16::i;:::-;1957:59;;;;-1:-1:-1;;;1957:59:9;;6653:2:11;1957:59:9;;;6635:21:11;6692:2;6672:18;;;6665:30;6731:32;6711:18;;;6704:60;6781:18;;1957:59:9;6451:354:11;1957:59:9;-1:-1:-1;;;;;2044:19:9;;:9;:19;;;;;;;;;;;2033:10;;2044:23;;2066:1;;2044:23;:::i;:::-;2033:35;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;2026:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:215;;;:::o;4091:73::-;4130:27;4146:10;4130:15;:27::i;:::-;4091:73::o;1006:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1006:37:9;;;;-1:-1:-1;1006:37:9;:::o;3434:213::-;1100:18;1107:10;1100:6;:18::i;:::-;1079:104;;;;-1:-1:-1;;;1079:104:9;;;;;;;:::i;:::-;3491:12:::1;:19:::0;3483:58:::1;;;::::0;-1:-1:-1;;;3483:58:9;;7397:2:11;3483:58:9::1;::::0;::::1;7379:21:11::0;7436:2;7416:18;;;7409:30;-1:-1:-1;;;7455:18:11;;;7448:52;7517:18;;3483:58:9::1;7195:346:11::0;3483:58:9::1;3611:1;3551:9;:57:::0;3561:12:::1;3596:1;3574:12;:19;;;;:23;;;;:::i;:::-;3561:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;:46:::0;-1:-1:-1;;;;;3561:46:9::1;3551:57:::0;;;::::1;::::0;;;;;;;;:61;3622:12:::1;:18:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;3622:18:9;;;;;::::1;;::::0;;-1:-1:-1;;;;;;3622:18:9::1;::::0;;::::1;;::::0;;;3434:213::o;2224:295::-;2303:10;2293:9;:21;;;;;;;;;;;:26;2285:68;;;;-1:-1:-1;;;2285:68:9;;7880:2:11;2285:68:9;;;7862:21:11;7919:2;7899:18;;;7892:30;7958:31;7938:18;;;7931:59;8007:18;;2285:68:9;7678:353:11;2285:68:9;2373:10;2363:9;:21;;;;;;;;;;;2387:1;2363:25;;;;2416:95;;;;;;;;;;;;;;;;;2398:12;:114;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2398:114:9;-1:-1:-1;;;;;2398:114:9;;;;;;;;;;;;;;;;2224:295::o;822:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;822:24:9;;;-1:-1:-1;;;;822:24:9;;;;;;;:::o;2850:510::-;1100:18;1107:10;1100:6;:18::i;:::-;1079:104;;;;-1:-1:-1;;;1079:104:9;;;;;;;:::i;:::-;2930:12:::1;:19:::0;2922:58:::1;;;::::0;-1:-1:-1;;;2922:58:9;;7397:2:11;2922:58:9::1;::::0;::::1;7379:21:11::0;7436:2;7416:18;;;7409:30;-1:-1:-1;;;7455:18:11;;;7448:52;7517:18;;2922:58:9::1;7195:346:11::0;2922:58:9::1;3050:10;:17:::0;:21:::1;::::0;3070:1:::1;3050:21;:::i;:::-;3000:12;3013:19:::0;;2990:9:::1;::::0;;;3013:23:::1;::::0;3035:1:::1;::::0;3013:23:::1;:::i;:::-;3000:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:46:::0;-1:-1:-1;;;;;3000:46:9::1;2990:57:::0;;;::::1;::::0;;;;;;;;;;:81;;;;3082:12;;3000:46;;:37;3082:7:::1;::::0;:12:::1;::::0;3000:46;;3082:12;;::::1;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3104:10;3120:178;;;;;;;;3149:12;3184:1;3162:12;:19;;;;:23;;;;:::i;:::-;3149:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:46:::0;-1:-1:-1;;;;;3149:46:9;;::::1;3120:178:::0;;3149:46;3120:178;;::::1;::::0;;;;;;;;;;3280:7;;::::1;::::0;;;::::1;;3120:178:::0;;;;;;;;3104:195;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;::::1;::::0;::::1;;-1:-1:-1::0;;;3104:195:9::1;-1:-1:-1::0;;;;;;3104:195:9;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;3104:195:9::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;3309:11:::1;:16:::0;;3324:1:::1;::::0;3309:11;::::1;::::0;:16:::1;::::0;3324:1;;3309:16:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3335:12;:18;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;3335:18:9;;;;;::::1;;::::0;;-1:-1:-1;;;;;;3335:18:9::1;::::0;;::::1;;::::0;;;-1:-1:-1;2850:510:9:o;4373:346::-;4456:16;4463:8;4456:6;:16::i;:::-;4435:89;;;;-1:-1:-1;;;4435:89:9;;8604:2:11;4435:89:9;;;8586:21:11;8643:2;8623:18;;;8616:30;8682:28;8662:18;;;8655:56;8728:18;;4435:89:9;8402:350:11;4435:89:9;-1:-1:-1;;;;;4566:19:9;;:9;:19;;;;;;;;;;;4555:10;;4566:23;;4588:1;;4566:23;:::i;:::-;4555:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;-1:-1:-1;;;4555:45:9;;;;4534:116;;;;-1:-1:-1;;;4534:116:9;;8959:2:11;4534:116:9;;;8941:21:11;8998:2;8978:18;;;8971:30;9037:26;9017:18;;;9010:54;9081:18;;4534:116:9;8757:348:11;4534:116:9;-1:-1:-1;;;;;4671:19:9;;:9;:19;;;;;;;;;;;4708:4;;;;4671:23;;4693:1;;4671:23;:::i;:::-;4660:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;;;;;-1:-1:-1;;;4660:52:9;-1:-1:-1;;;;4660:52:9;;;;;;;;;-1:-1:-1;4373:346:9:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;14:286:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:11;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:11:o;876:1165::-;1065:2;1117:21;;;1036:4;;1224;1209:20;;1090:18;;;1252:6;1036:4;;1307:705;1323:4;1318:3;1315:13;1307:705;;;1388:2;1384:7;1444:2;1432:9;1424:6;1420:22;1416:31;1411:3;1404:44;1477:6;1471:13;1517:2;1511:9;1548:6;1540;1533:22;1579:1;1593:155;1609:6;1604:3;1601:15;1593:155;;;1715:12;;;1711:21;;1705:28;1682:16;;;1678:25;;1671:63;1626:12;;1593:155;;;1772:6;1767:3;1764:15;1761:102;;;1847:1;1842:2;1833:6;1825;1821:19;1817:28;1810:39;1761:102;-1:-1:-1;1918:2:11;1906:15;1902:24;;;1890:37;;;;1886:46;;;-1:-1:-1;1990:12:11;;;;1955:15;;;;1347:1;1338:11;1307:705;;;-1:-1:-1;2029:6:11;;876:1165;-1:-1:-1;;;;;;;876:1165:11:o;2046:180::-;2105:6;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;-1:-1:-1;2197:23:11;;2046:180;-1:-1:-1;2046:180:11:o;3055:127::-;3116:10;3111:3;3107:20;3104:1;3097:31;3147:4;3144:1;3137:15;3171:4;3168:1;3161:15;3187:253;3259:2;3253:9;3301:4;3289:17;;3336:18;3321:34;;3357:22;;;3318:62;3315:88;;;3383:18;;:::i;:::-;3419:2;3412:22;3187:253;:::o;3445:275::-;3516:2;3510:9;3581:2;3562:13;;-1:-1:-1;;3558:27:11;3546:40;;3616:18;3601:34;;3637:22;;;3598:62;3595:88;;;3663:18;;:::i;:::-;3699:2;3692:22;3445:275;;-1:-1:-1;3445:275:11:o;3725:1567::-;3818:6;3849:2;3892;3880:9;3871:7;3867:23;3863:32;3860:52;;;3908:1;3905;3898:12;3860:52;3948:9;3935:23;3977:18;4018:2;4010:6;4007:14;4004:34;;;4034:1;4031;4024:12;4004:34;4072:6;4061:9;4057:22;4047:32;;4098:4;4138:7;4133:2;4129;4125:11;4121:25;4111:53;;4160:1;4157;4150:12;4111:53;4184:22;;:::i;:::-;4228:3;4262:4;4258:2;4254:13;4290:7;4282:6;4279:19;4276:39;;;4311:1;4308;4301:12;4276:39;4335:2;4346:916;4362:6;4357:3;4354:15;4346:916;;;4448:3;4435:17;4484:2;4471:11;4468:19;4465:109;;;4528:1;4557:2;4553;4546:14;4465:109;4597:20;;4644:11;;;4640:25;-1:-1:-1;4630:123:11;;4707:1;4736:2;4732;4725:14;4630:123;4789:2;4776:16;4815:2;4811;4808:10;4805:36;;;4821:18;;:::i;:::-;4867:51;4891:11;;;-1:-1:-1;;4887:25:11;4883:34;;4867:51;:::i;:::-;4945:2;4938:5;4931:17;4989:7;4984:2;4979;4975;4971:11;4967:20;4964:33;4961:123;;;5038:1;5067:2;5063;5056:14;4961:123;5139:2;5134;5130;5126:11;5121:2;5114:5;5110:14;5097:45;5187:1;5166:14;;;5162:23;;5155:34;;;;5202:18;;-1:-1:-1;5240:12:11;;;;4379;;4346:916;;;-1:-1:-1;5281:5:11;;3725:1567;-1:-1:-1;;;;;;;;;3725:1567:11:o;5297:403::-;5499:2;5481:21;;;5538:2;5518:18;;;5511:30;5577:34;5572:2;5557:18;;5550:62;-1:-1:-1;;;5643:2:11;5628:18;;5621:37;5690:3;5675:19;;5297:403::o;5705:127::-;5766:10;5761:3;5757:20;5754:1;5747:31;5797:4;5794:1;5787:15;5821:4;5818:1;5811:15;5837:125;5877:4;5905:1;5902;5899:8;5896:34;;;5910:18;;:::i;:::-;-1:-1:-1;5947:9:11;;5837:125::o;5967:127::-;6028:10;6023:3;6019:20;6016:1;6009:31;6059:4;6056:1;6049:15;6083:4;6080:1;6073:15;6810:380;6889:1;6885:12;;;;6932;;;6953:61;;7007:4;6999:6;6995:17;6985:27;;6953:61;7060:2;7052:6;7049:14;7029:18;7026:38;7023:161;;7106:10;7101:3;7097:20;7094:1;7087:31;7141:4;7138:1;7131:15;7169:4;7166:1;7159:15;7023:161;;6810:380;;;:::o;7546:127::-;7607:10;7602:3;7598:20;7595:1;7588:31;7638:4;7635:1;7628:15;7662:4;7659:1;7652:15;8036:128;8076:3;8107:1;8103:6;8100:1;8097:13;8094:39;;;8113:18;;:::i;:::-;-1:-1:-1;8149:9:11;;8036:128::o;8169:228::-;8208:3;8236:10;8273:2;8270:1;8266:10;8303:2;8300:1;8296:10;8334:3;8330:2;8326:12;8321:3;8318:21;8315:47;;;8342:18;;:::i;:::-;8378:13;;8169:228;-1:-1:-1;;;;8169:228:11:o",
  "language": "Solidity",
  "natspec": {
    "details": "Reference data providers in the project and their requests to join the project",
    "kind": "dev",
    "methods": {
      "acceptNode(bytes[112])": {
        "notice": "Accepting first request in the stack",
        "params": {
          "secret": "sharing encrypted common secret for nodes TODO: Secret should be updated as hash of previous secret So that the node doesn't have access to previous models TODO: Should not accept node when plan is running"
        }
      },
      "activate()": {
        "notice": "Node activates itself"
      },
      "deactivate()": {
        "details": "onlyNode modifier is not required. It is checked inside _deactivateNode(...)",
        "notice": "Node deactivates itself"
      },
      "declineNode()": {
        "notice": "Declining first request in the stack"
      },
      "isNode(address)": {
        "notice": "Check if given address belongs to node",
        "params": {
          "_address": "address to check"
        }
      },
      "requestJoinNode(bytes32)": {
        "notice": "Node can request to join providing their public key.",
        "params": {
          "publicKey": "compressed public key value"
        }
      }
    },
    "version": 1
  },
  "offset": [
    153,
    4721
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F2690A5 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x94613CD7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x94613CD7 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xBA7925CB EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xC4E10A14 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xE27C87A0 EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F2690A5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x72AB489F EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x8518A047 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13029E03 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x13029E03 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x1821AA62 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x4244609B EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x51B42B00 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1750152 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x7F19651 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xF15F4C0 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x127 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x144 PUSH2 0x277 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x144 PUSH2 0x547 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x127 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x144 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 GT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x280 CALLER PUSH2 0x258 JUMP JUMPDEST PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP1 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x2C4 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2D4 JUMPI PUSH2 0x2D4 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x72 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F646520697320616C7265616479206163746976652E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 DUP2 SWAP1 PUSH2 0x35D SWAP1 PUSH1 0x3 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x72 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x3AA DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320646F65736E27742062656C6F6E6720746F206E6F64650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x41E SWAP1 PUSH1 0x3 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x42E JUMPI PUSH2 0x42E PUSH2 0xF49 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x72 MUL ADD PUSH1 0x1 ADD PUSH1 0x70 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4F9 JUMPI DUP4 DUP3 ADD DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0xF5F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0xF5F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x456 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50D CALLER PUSH2 0x9E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0x550 CALLER PUSH2 0x258 JUMP JUMPDEST PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP1 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x5DD JUMPI PUSH2 0x5DD PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD SSTORE SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C7265616479206D61646520726571756573742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29C JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP4 DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x2 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x72 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x71 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x78F CALLER PUSH2 0x258 JUMP JUMPDEST PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP1 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x801 SWAP1 PUSH1 0x3 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x816 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x826 JUMPI PUSH2 0x826 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP3 DUP4 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x875 SWAP1 DUP5 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xFC7 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8C4 JUMPI PUSH2 0x8C4 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP3 DUP4 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP6 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP8 ADD DUP11 SWAP1 MSTORE SWAP4 SLOAD PUSH4 0xFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV AND PUSH1 0x60 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP7 SLOAD DUP1 DUP7 ADD DUP9 SSTORE SWAP7 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x72 SWAP1 SWAP8 MUL ADD DUP1 SLOAD SWAP2 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP7 SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR DUP2 SSTORE SWAP3 DUP3 ADD MLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x95F SWAP2 DUP4 ADD SWAP1 PUSH1 0x70 PUSH2 0xB67 JUMP JUMPDEST POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x71 SWAP1 SWAP2 ADD SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x989 SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0xFC7 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x9ED DUP2 PUSH2 0x258 JUMP JUMPDEST PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206973206E6F742076616C6964206E6F64652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH2 0xA61 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA71 JUMPI PUSH2 0xA71 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x72 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F646520697320616C726561647920696E6163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 DUP2 SWAP1 PUSH2 0xB02 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0xF32 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB12 JUMPI PUSH2 0xB12 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x72 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0xE00 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x70 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB4F JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x70 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xBA7 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xBA7 JUMPI DUP3 MLOAD DUP1 MLOAD PUSH2 0xB97 SWAP2 DUP5 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBB7 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB7A JUMP JUMPDEST POP PUSH2 0xBB3 SWAP3 SWAP2 POP PUSH2 0xC37 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xBC3 SWAP1 PUSH2 0xF5F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC2B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBFE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC2B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC2B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC2B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC10 JUMP JUMPDEST POP PUSH2 0xBB3 SWAP3 SWAP2 POP PUSH2 0xC54 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x0 PUSH2 0xC4B DUP3 DUP3 PUSH2 0xC69 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xC37 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC55 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xC75 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xC85 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCA3 SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE20 DUP4 ADD DUP4 DUP3 ADD DUP6 DUP5 DUP1 JUMPDEST PUSH1 0x70 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x1F NOT DUP1 DUP10 DUP8 SUB ADD DUP6 MSTORE DUP4 MLOAD DUP1 MLOAD DUP1 DUP9 MSTORE DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD21 JUMPI DUP3 DUP2 ADD DUP11 ADD MLOAD DUP10 DUP3 ADD DUP12 ADD MSTORE DUP10 ADD PUSH2 0xD06 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD31 JUMPI DUP6 DUP11 DUP4 DUP12 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 ADD DUP7 ADD SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xCEA JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE00 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDB0 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDDF JUMPI PUSH2 0xDDF PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP PUSH1 0x1F DUP7 DUP2 DUP5 ADD SLT PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2F PUSH2 0xD8C JUMP JUMPDEST DUP1 PUSH2 0xE00 DUP6 ADD DUP10 DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEC6 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD DUP6 DUP2 ADD DUP13 SGT PUSH2 0xE6D JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP1 CALLDATALOAD DUP8 DUP2 GT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7F PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xE90 DUP2 DUP9 ADD PUSH1 0x1F NOT AND DUP12 ADD PUSH2 0xDB6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP14 DUP12 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP12 DUP5 ADD DUP13 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD DUP12 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE POP SWAP3 DUP8 ADD SWAP3 DUP8 ADD PUSH2 0xE44 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206E6F6465732061726520616C6C6F77656420746F20657865637574 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x32903A3434B997 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF44 JUMPI PUSH2 0xF44 PUSH2 0xF1C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF73 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFC2 JUMPI PUSH2 0xFC2 PUSH2 0xF1C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0xFE6 JUMPI PUSH2 0xFE6 PUSH2 0xF1C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xC4 0xAE AND DUP5 0xB2 PUSH31 0x172113B8554E64ADE504A8513EB98F3D4AD659077F4C6B75A164736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6F2690A5"
    },
    "38": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x94613CD7"
    },
    "49": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "GT",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x94613CD7"
    },
    "60": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E2"
    },
    "64": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xBA7925CB"
    },
    "71": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F5"
    },
    "75": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC4E10A14"
    },
    "82": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20D"
    },
    "86": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "88": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xE27C87A0"
    },
    "93": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "94": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x245"
    },
    "97": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "101": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "REVERT",
      "path": "9"
    },
    "102": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "103": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "104": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6F2690A5"
    },
    "109": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "110": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x188"
    },
    "113": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "114": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "115": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x72AB489F"
    },
    "120": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1BA"
    },
    "124": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8518A047"
    },
    "131": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C2"
    },
    "135": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "139": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "REVERT",
      "path": "9"
    },
    "140": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "141": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "142": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x13029E03"
    },
    "147": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "GT",
      "path": "9"
    },
    "148": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "152": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "153": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x13029E03"
    },
    "158": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "159": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x146"
    },
    "162": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "163": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "164": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1821AA62"
    },
    "169": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "170": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x158"
    },
    "173": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "174": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "175": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4244609B"
    },
    "180": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "181": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x160"
    },
    "184": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "185": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "186": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x51B42B00"
    },
    "191": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "192": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x180"
    },
    "195": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "196": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "199": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "REVERT",
      "path": "9"
    },
    "200": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "201": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "202": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1750152"
    },
    "207": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "208": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "212": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "213": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x7F19651"
    },
    "218": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "219": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x117"
    },
    "222": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "223": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "224": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF15F4C0"
    },
    "229": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "EQ",
      "path": "9"
    },
    "230": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13C"
    },
    "233": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "234": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "235": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        153,
        4721
      ],
      "op": "REVERT",
      "path": "9"
    },
    "239": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "240": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x102"
    },
    "243": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFD"
    },
    "246": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "247": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "249": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA6"
    },
    "252": {
      "fn": "DataProviders.isNode",
      "jump": "i",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMP",
      "path": "9"
    },
    "253": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "254": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x258"
    },
    "257": {
      "fn": "DataProviders.isNode",
      "jump": "i",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMP",
      "path": "9"
    },
    "258": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "259": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "261": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "262": {
      "op": "SWAP1"
    },
    "263": {
      "op": "ISZERO"
    },
    "264": {
      "op": "ISZERO"
    },
    "265": {
      "op": "DUP2"
    },
    "266": {
      "op": "MSTORE"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "269": {
      "op": "ADD"
    },
    "270": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "271": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "273": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "274": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "DUP1",
      "path": "9"
    },
    "275": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "276": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "SUB",
      "path": "9"
    },
    "277": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "278": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "RETURN",
      "path": "9"
    },
    "279": {
      "offset": [
        852,
        881
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "280": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "282": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "283": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x127"
    },
    "286": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "287": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "292": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "AND",
      "path": "9"
    },
    "293": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "DUP2",
      "path": "9"
    },
    "294": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "JUMP",
      "path": "9"
    },
    "295": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "296": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "298": {
      "fn": "DataProviders.isNode",
      "offset": [
        852,
        881
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "299": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "offset": [
        852,
        881
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "DataProviders.activate",
      "offset": [
        3706,
        3941
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "317": {
      "fn": "DataProviders.activate",
      "offset": [
        3706,
        3941
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144"
    },
    "320": {
      "fn": "DataProviders.activate",
      "offset": [
        3706,
        3941
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x277"
    },
    "323": {
      "fn": "DataProviders.activate",
      "jump": "i",
      "offset": [
        3706,
        3941
      ],
      "op": "JUMP",
      "path": "9"
    },
    "324": {
      "fn": "DataProviders.activate",
      "offset": [
        3706,
        3941
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "325": {
      "fn": "DataProviders.activate",
      "offset": [
        3706,
        3941
      ],
      "op": "STOP",
      "path": "9"
    },
    "326": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1759,
        1861
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "327": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1835,
        1847
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x3"
    },
    "329": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1835,
        1854
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "330": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1759,
        1861
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "331": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1759,
        1861
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "333": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1759,
        1861
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "334": {
      "op": "SWAP1"
    },
    "335": {
      "op": "DUP2"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "fn": "DataProviders.getNodeRequestsLength",
      "offset": [
        1759,
        1861
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E"
    },
    "343": {
      "op": "JUMP"
    },
    "344": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1660,
        1753
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "345": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1729,
        1739
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 1,
      "value": "0x1"
    },
    "347": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1729,
        1746
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "348": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1660,
        1753
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14A"
    },
    "351": {
      "fn": "DataProviders.getNodesLength",
      "offset": [
        1660,
        1753
      ],
      "op": "JUMP",
      "path": "9"
    },
    "352": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "353": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x173"
    },
    "356": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16E"
    },
    "359": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "360": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "362": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA6"
    },
    "365": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMP",
      "path": "9"
    },
    "366": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "367": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x399"
    },
    "370": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMP",
      "path": "9"
    },
    "371": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "372": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "374": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "375": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E"
    },
    "378": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "379": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "380": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCD6"
    },
    "383": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMP",
      "path": "9"
    },
    "384": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4091,
        4164
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "385": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4091,
        4164
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144"
    },
    "388": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4091,
        4164
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x504"
    },
    "391": {
      "fn": "DataProviders.deactivate",
      "jump": "i",
      "offset": [
        4091,
        4164
      ],
      "op": "JUMP",
      "path": "9"
    },
    "392": {
      "offset": [
        1006,
        1043
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "393": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19B"
    },
    "396": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x196"
    },
    "399": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "400": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "402": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD5D"
    },
    "405": {
      "fn": "DataProviders.deactivate",
      "jump": "i",
      "offset": [
        1006,
        1043
      ],
      "op": "JUMP",
      "path": "9"
    },
    "406": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "407": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x50F"
    },
    "410": {
      "fn": "DataProviders.deactivate",
      "jump": "i",
      "offset": [
        1006,
        1043
      ],
      "op": "JUMP",
      "path": "9"
    },
    "411": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "412": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "414": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "DUP1",
      "path": "9"
    },
    "415": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "op": "SUB"
    },
    "424": {
      "op": "SWAP1"
    },
    "425": {
      "op": "SWAP4"
    },
    "426": {
      "op": "AND"
    },
    "427": {
      "op": "DUP4"
    },
    "428": {
      "op": "MSTORE"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "431": {
      "op": "DUP4"
    },
    "432": {
      "op": "ADD"
    },
    "433": {
      "op": "SWAP2"
    },
    "434": {
      "op": "SWAP1"
    },
    "435": {
      "op": "SWAP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E"
    },
    "441": {
      "op": "JUMP"
    },
    "442": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3434,
        3647
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "443": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3434,
        3647
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144"
    },
    "446": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3434,
        3647
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x547"
    },
    "449": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3434,
        3647
      ],
      "op": "JUMP",
      "path": "9"
    },
    "450": {
      "offset": [
        775,
        816
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "451": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14A"
    },
    "454": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1D0"
    },
    "457": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "458": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "460": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA6"
    },
    "463": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        775,
        816
      ],
      "op": "JUMP",
      "path": "9"
    },
    "464": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "465": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "467": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "469": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "DUP2",
      "path": "9"
    },
    "470": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "471": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "472": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "473": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "DUP2",
      "path": "9"
    },
    "474": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "475": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "477": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "478": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "479": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "480": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "DUP2",
      "path": "9"
    },
    "481": {
      "fn": "DataProviders.declineNode",
      "offset": [
        775,
        816
      ],
      "op": "JUMP",
      "path": "9"
    },
    "482": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "483": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144"
    },
    "486": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F0"
    },
    "489": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "490": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "492": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD5D"
    },
    "495": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "i",
      "offset": [
        2224,
        2519
      ],
      "op": "JUMP",
      "path": "9"
    },
    "496": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "497": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x643"
    },
    "500": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "i",
      "offset": [
        2224,
        2519
      ],
      "op": "JUMP",
      "path": "9"
    },
    "501": {
      "offset": [
        887,
        912
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "502": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "504": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "505": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x127"
    },
    "508": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "509": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x100000000"
    },
    "515": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "516": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "DIV",
      "path": "9"
    },
    "517": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "522": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "AND",
      "path": "9"
    },
    "523": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "DUP2",
      "path": "9"
    },
    "524": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        887,
        912
      ],
      "op": "JUMP",
      "path": "9"
    },
    "525": {
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "526": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x220"
    },
    "529": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21B"
    },
    "532": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "533": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "535": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD5D"
    },
    "538": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "i",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "9"
    },
    "539": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "540": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x743"
    },
    "543": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "i",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "9"
    },
    "544": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "545": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "547": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "9"
    },
    "548": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "555": {
      "op": "SHL"
    },
    "556": {
      "op": "SUB"
    },
    "557": {
      "op": "SWAP1"
    },
    "558": {
      "op": "SWAP5"
    },
    "559": {
      "op": "AND"
    },
    "560": {
      "op": "DUP5"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "SWAP2"
    },
    "563": {
      "op": "ISZERO"
    },
    "564": {
      "op": "ISZERO"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "567": {
      "op": "DUP5"
    },
    "568": {
      "op": "ADD"
    },
    "569": {
      "op": "MSTORE"
    },
    "570": {
      "op": "SWAP1"
    },
    "571": {
      "op": "DUP3"
    },
    "572": {
      "op": "ADD"
    },
    "573": {
      "op": "MSTORE"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E"
    },
    "580": {
      "op": "JUMP"
    },
    "581": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "582": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x144"
    },
    "585": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x253"
    },
    "588": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "589": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "591": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDE7"
    },
    "594": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        2850,
        3360
      ],
      "op": "JUMP",
      "path": "9"
    },
    "595": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "596": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x786"
    },
    "599": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        2850,
        3360
      ],
      "op": "JUMP",
      "path": "9"
    },
    "600": {
      "fn": "DataProviders.isNode",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "op": "SUB"
    },
    "609": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "AND",
      "path": "9",
      "statement": 2
    },
    "610": {
      "fn": "DataProviders.isNode",
      "offset": [
        1600,
        1604
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "612": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "613": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "DUP2",
      "path": "9"
    },
    "614": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "615": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "617": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "DUP2",
      "path": "9"
    },
    "618": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "619": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "620": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "622": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "623": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "624": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1642
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "625": {
      "fn": "DataProviders.isNode",
      "offset": [
        1646,
        1647
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "627": {
      "op": "GT"
    },
    "628": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1647
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "629": {
      "fn": "DataProviders.isNode",
      "offset": [
        1623,
        1647
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "630": {
      "fn": "DataProviders.isNode",
      "jump": "o",
      "offset": [
        1546,
        1654
      ],
      "op": "JUMP",
      "path": "9"
    },
    "631": {
      "fn": "DataProviders.activate",
      "offset": [
        3706,
        3941
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "632": {
      "offset": [
        1100,
        1118
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x280"
    },
    "635": {
      "offset": [
        1107,
        1117
      ],
      "op": "CALLER",
      "path": "9"
    },
    "636": {
      "offset": [
        1100,
        1106
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x258"
    },
    "639": {
      "jump": "i",
      "offset": [
        1100,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "640": {
      "fn": "DataProviders.activate",
      "offset": [
        1100,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "641": {
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A5"
    },
    "644": {
      "offset": [
        1079,
        1183
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "645": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "647": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "648": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "offset": [
        1079,
        1183
      ],
      "op": "DUP2",
      "path": "9"
    },
    "656": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "657": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "659": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "ADD",
      "path": "9"
    },
    "660": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "663": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "664": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xED5"
    },
    "667": {
      "fn": "DataProviders.activate",
      "jump": "i",
      "offset": [
        1079,
        1183
      ],
      "op": "JUMP",
      "path": "9"
    },
    "668": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "669": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "671": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "672": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "DUP1",
      "path": "9"
    },
    "673": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "674": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "SUB",
      "path": "9"
    },
    "675": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "676": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "677": {
      "fn": "DataProviders.activate",
      "offset": [
        1079,
        1183
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "678": {
      "fn": "DataProviders.activate",
      "offset": [
        3795,
        3805
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 3
    },
    "679": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3794
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "681": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "682": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "DUP2",
      "path": "9"
    },
    "683": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "684": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "686": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "DUP2",
      "path": "9"
    },
    "687": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "688": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "689": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "691": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "692": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "693": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3806
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "694": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3784
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "696": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3784
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "697": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3810
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2C4"
    },
    "700": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3810
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "701": {
      "fn": "DataProviders.activate",
      "offset": [
        3809,
        3810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "703": {
      "fn": "DataProviders.activate",
      "offset": [
        3809,
        3810
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "704": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3810
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "707": {
      "fn": "DataProviders.activate",
      "jump": "i",
      "offset": [
        3785,
        3810
      ],
      "op": "JUMP",
      "path": "9"
    },
    "708": {
      "fn": "DataProviders.activate",
      "offset": [
        3785,
        3810
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "709": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "DUP2",
      "path": "9"
    },
    "710": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "711": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "DUP2",
      "path": "9"
    },
    "712": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "LT",
      "path": "9"
    },
    "713": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D4"
    },
    "716": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "717": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D4"
    },
    "720": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "723": {
      "fn": "DataProviders.activate",
      "jump": "i",
      "offset": [
        3774,
        3811
      ],
      "op": "JUMP",
      "path": "9"
    },
    "724": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "725": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "727": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "728": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "DUP3",
      "path": "9"
    },
    "729": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "730": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "732": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "733": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "734": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "735": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "737": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "738": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "739": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "MUL",
      "path": "9"
    },
    "740": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3811
      ],
      "op": "ADD",
      "path": "9"
    },
    "741": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3821
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "746": {
      "op": "SHL"
    },
    "747": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3821
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "748": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3821
      ],
      "op": "DIV",
      "path": "9"
    },
    "749": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3821
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "751": {
      "fn": "DataProviders.activate",
      "offset": [
        3774,
        3821
      ],
      "op": "AND",
      "path": "9"
    },
    "752": {
      "branch": 23,
      "fn": "DataProviders.activate",
      "offset": [
        3773,
        3821
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "753": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x33C"
    },
    "756": {
      "branch": 23,
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "757": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "759": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "DUP2",
      "path": "9"
    },
    "768": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "773": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "DUP3",
      "path": "9"
    },
    "774": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "ADD",
      "path": "9"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH32",
      "value": "0x4E6F646520697320616C7265616479206163746976652E000000000000000000"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "823": {
      "op": "ADD"
    },
    "824": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "827": {
      "op": "JUMP"
    },
    "828": {
      "fn": "DataProviders.activate",
      "offset": [
        3752,
        3870
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "829": {
      "fn": "DataProviders.activate",
      "offset": [
        3901,
        3911
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 4
    },
    "830": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3900
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "832": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "833": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "DUP2",
      "path": "9"
    },
    "834": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "835": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "837": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "DUP2",
      "path": "9"
    },
    "838": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "839": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "840": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "842": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "843": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "844": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3912
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "845": {
      "fn": "DataProviders.activate",
      "offset": [
        3930,
        3934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "847": {
      "fn": "DataProviders.activate",
      "offset": [
        3930,
        3934
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "848": {
      "fn": "DataProviders.activate",
      "offset": [
        3930,
        3934
      ],
      "op": "DUP2",
      "path": "9"
    },
    "849": {
      "fn": "DataProviders.activate",
      "offset": [
        3930,
        3934
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "850": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3916
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x35D"
    },
    "853": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "854": {
      "fn": "DataProviders.activate",
      "offset": [
        3915,
        3916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "856": {
      "fn": "DataProviders.activate",
      "offset": [
        3915,
        3916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "857": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3916
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "860": {
      "fn": "DataProviders.activate",
      "jump": "i",
      "offset": [
        3891,
        3916
      ],
      "op": "JUMP",
      "path": "9"
    },
    "861": {
      "fn": "DataProviders.activate",
      "offset": [
        3891,
        3916
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "862": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "DUP2",
      "path": "9"
    },
    "863": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "864": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "DUP2",
      "path": "9"
    },
    "865": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "LT",
      "path": "9"
    },
    "866": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x36D"
    },
    "869": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "870": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x36D"
    },
    "873": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "876": {
      "fn": "DataProviders.activate",
      "jump": "i",
      "offset": [
        3880,
        3917
      ],
      "op": "JUMP",
      "path": "9"
    },
    "877": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "878": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "880": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "881": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "DUP3",
      "path": "9"
    },
    "882": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "883": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "885": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "886": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "887": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "888": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "890": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "891": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "892": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "MUL",
      "path": "9"
    },
    "893": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3917
      ],
      "op": "ADD",
      "path": "9"
    },
    "894": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "DUP1",
      "path": "9"
    },
    "895": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "896": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "897": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "898": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "MUL",
      "path": "9"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "NOT"
    },
    "911": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "912": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "913": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "AND",
      "path": "9"
    },
    "914": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "915": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "916": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "917": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "OR",
      "path": "9"
    },
    "918": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "919": {
      "fn": "DataProviders.activate",
      "offset": [
        3880,
        3934
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "920": {
      "fn": "DataProviders.activate",
      "jump": "o",
      "offset": [
        3706,
        3941
      ],
      "op": "JUMP",
      "path": "9"
    },
    "921": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "922": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1928,
        1945
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3A1"
    },
    "925": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1928,
        1945
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB3F"
    },
    "928": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        1928,
        1945
      ],
      "op": "JUMP",
      "path": "9"
    },
    "929": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1928,
        1945
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "930": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1965,
        1981
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 5,
      "value": "0x3AA"
    },
    "933": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1972,
        1980
      ],
      "op": "DUP3",
      "path": "9"
    },
    "934": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1965,
        1971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x258"
    },
    "937": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        1965,
        1981
      ],
      "op": "JUMP",
      "path": "9"
    },
    "938": {
      "branch": 24,
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1965,
        1981
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "939": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3F6"
    },
    "942": {
      "branch": 24,
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "943": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "945": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "952": {
      "op": "SHL"
    },
    "953": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "DUP2",
      "path": "9"
    },
    "954": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "957": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "959": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "DUP3",
      "path": "9"
    },
    "960": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "ADD",
      "path": "9"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "966": {
      "op": "DUP3"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "op": "MSTORE"
    },
    "969": {
      "op": "PUSH32",
      "value": "0x4164647265737320646F65736E27742062656C6F6E6720746F206E6F64650000"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1004": {
      "op": "DUP3"
    },
    "1005": {
      "op": "ADD"
    },
    "1006": {
      "op": "MSTORE"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "1013": {
      "op": "JUMP"
    },
    "1014": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1957,
        2016
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "op": "SUB"
    },
    "1023": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 6
    },
    "1024": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "AND",
      "path": "9"
    },
    "1025": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1027": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1028": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1029": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1030": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1032": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1033": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1034": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1035": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1037": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1038": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1039": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2063
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1040": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1042": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2043
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1043": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2067
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x41E"
    },
    "1046": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2067
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1047": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2066,
        2067
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1049": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2066,
        2067
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1050": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2067
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "1053": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        2044,
        2067
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1054": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2044,
        2067
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1055": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1056": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1057": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1058": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "LT",
      "path": "9"
    },
    "1059": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x42E"
    },
    "1062": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1063": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x42E"
    },
    "1066": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "1069": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        2033,
        2068
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1070": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1071": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1072": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1074": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1075": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1077": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1079": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1080": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1081": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "1083": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "MUL",
      "path": "9"
    },
    "1084": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2068
      ],
      "op": "ADD",
      "path": "9"
    },
    "1085": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1087": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2033,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1088": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x70"
    },
    "1090": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1091": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1093": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MUL",
      "path": "9"
    },
    "1094": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1096": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1097": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1098": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1099": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1100": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1102": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1103": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1104": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1105": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1106": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1107": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1109": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1110": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1111": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1112": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1113": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "LT",
      "path": "9"
    },
    "1114": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1115": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4F9"
    },
    "1118": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1119": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1120": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1121": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1122": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1123": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1124": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x46C"
    },
    "1127": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1128": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF5F"
    },
    "1131": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1132": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1133": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1134": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1136": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1137": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1139": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1140": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1141": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DIV",
      "path": "9"
    },
    "1142": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MUL",
      "path": "9"
    },
    "1143": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1145": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1146": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1148": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1149": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1150": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1151": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1152": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1154": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1155": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1156": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1157": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1158": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1159": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1160": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1161": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1162": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1164": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1165": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1166": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1167": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1168": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x498"
    },
    "1171": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1172": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF5F"
    },
    "1175": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "i",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1176": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1177": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1178": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1179": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4E5"
    },
    "1182": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1183": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1184": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1186": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "LT",
      "path": "9"
    },
    "1187": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4BA"
    },
    "1190": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1191": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "1194": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1195": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1196": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1197": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DIV",
      "path": "9"
    },
    "1198": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MUL",
      "path": "9"
    },
    "1199": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1200": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1201": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1202": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1204": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1205": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1206": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4E5"
    },
    "1209": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1210": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1211": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1212": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1213": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1214": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1215": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1217": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1218": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1220": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1222": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1223": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1224": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1225": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1226": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1227": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1228": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1229": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1230": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1232": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1233": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1234": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1236": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1237": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1238": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1239": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "GT",
      "path": "9"
    },
    "1240": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C8"
    },
    "1243": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1244": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1245": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1246": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SUB",
      "path": "9"
    },
    "1247": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1249": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "AND",
      "path": "9"
    },
    "1250": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1251": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1252": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1253": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1254": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1255": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1256": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1257": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1258": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1259": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1260": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1261": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1263": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1264": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1265": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1267": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "ADD",
      "path": "9"
    },
    "1268": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1269": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x456"
    },
    "1272": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1273": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1274": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1275": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1276": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1277": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1278": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1279": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        2026,
        2075
      ],
      "op": "POP",
      "path": "9"
    },
    "1280": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1281": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1282": {
      "fn": "DataProviders.getNodeSecret",
      "offset": [
        1867,
        2082
      ],
      "op": "POP",
      "path": "9"
    },
    "1283": {
      "fn": "DataProviders.getNodeSecret",
      "jump": "o",
      "offset": [
        1867,
        2082
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1284": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4091,
        4164
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1285": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4130,
        4157
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 7,
      "value": "0x50D"
    },
    "1288": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4146,
        4156
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1289": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4130,
        4145
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9E4"
    },
    "1292": {
      "fn": "DataProviders.deactivate",
      "jump": "i",
      "offset": [
        4130,
        4157
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1293": {
      "fn": "DataProviders.deactivate",
      "offset": [
        4130,
        4157
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1294": {
      "fn": "DataProviders.deactivate",
      "jump": "o",
      "offset": [
        4091,
        4164
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1295": {
      "offset": [
        1006,
        1043
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1296": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1298": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1299": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1300": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1301": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1302": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "LT",
      "path": "9"
    },
    "1303": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x51F"
    },
    "1306": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1307": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1309": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1310": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1311": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1312": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1314": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1315": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1316": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1317": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1319": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1320": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1321": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1322": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1324": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1325": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1326": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "MUL",
      "path": "9"
    },
    "1327": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "ADD",
      "path": "9"
    },
    "1328": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1329": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1330": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1332": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1333": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1334": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "ADD",
      "path": "9"
    },
    "1335": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "op": "SUB"
    },
    "1344": {
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1345": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1346": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "AND",
      "path": "9"
    },
    "1347": {
      "fn": "DataProviders.deactivate",
      "offset": [
        1006,
        1043
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1348": {
      "op": "POP"
    },
    "1349": {
      "offset": [
        1006,
        1043
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1350": {
      "fn": "DataProviders.deactivate",
      "jump": "o",
      "offset": [
        1006,
        1043
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1351": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3434,
        3647
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1352": {
      "offset": [
        1100,
        1118
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x550"
    },
    "1355": {
      "offset": [
        1107,
        1117
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1356": {
      "offset": [
        1100,
        1106
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x258"
    },
    "1359": {
      "jump": "i",
      "offset": [
        1100,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1360": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1100,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1361": {
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x56C"
    },
    "1364": {
      "offset": [
        1079,
        1183
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1365": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1367": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "offset": [
        1079,
        1183
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1376": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1377": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1379": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "ADD",
      "path": "9"
    },
    "1380": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "1383": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1384": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xED5"
    },
    "1387": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        1079,
        1183
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1388": {
      "fn": "DataProviders.declineNode",
      "offset": [
        1079,
        1183
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1389": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3491,
        3503
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 8,
      "value": "0x3"
    },
    "1391": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3491,
        3510
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1392": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5B4"
    },
    "1395": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1396": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1398": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1407": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1410": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1412": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1413": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "ADD",
      "path": "9"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH22",
      "value": "0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "1447": {
      "op": "SHL"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1450": {
      "op": "DUP3"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "op": "MSTORE"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "1459": {
      "op": "JUMP"
    },
    "1460": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3483,
        3541
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1461": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3611,
        3612
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 9,
      "value": "0x2"
    },
    "1463": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3560
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1465": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1466": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3573
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1468": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3596,
        3597
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1470": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3586
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1472": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3593
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1473": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3593
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1474": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3593
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1475": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3593
      ],
      "op": "POP",
      "path": "9"
    },
    "1476": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3597
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5CD"
    },
    "1479": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3597
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1480": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3597
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1481": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3597
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "1484": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3574,
        3597
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1485": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3574,
        3597
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1486": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1487": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1488": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1489": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "LT",
      "path": "9"
    },
    "1490": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5DD"
    },
    "1493": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1494": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5DD"
    },
    "1497": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "1500": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3561,
        3598
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1501": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1502": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1504": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1505": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1506": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1507": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1509": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1510": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1511": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1512": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1514": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1515": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1516": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "MUL",
      "path": "9"
    },
    "1517": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1518": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1519": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3598
      ],
      "op": "ADD",
      "path": "9"
    },
    "1520": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3607
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "op": "SUB"
    },
    "1529": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3561,
        3607
      ],
      "op": "AND",
      "path": "9"
    },
    "1530": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1531": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1532": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1533": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "ADD",
      "path": "9"
    },
    "1534": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1535": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1536": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1537": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1538": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1540": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "ADD",
      "path": "9"
    },
    "1541": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1542": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3608
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1543": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3551,
        3612
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1544": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 10,
      "value": "0x3"
    },
    "1546": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1547": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1548": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1549": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x618"
    },
    "1552": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1553": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x618"
    },
    "1556": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF99"
    },
    "1559": {
      "fn": "DataProviders.declineNode",
      "jump": "i",
      "offset": [
        3622,
        3640
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1560": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1561": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1563": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1564": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1565": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1566": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1568": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1569": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1570": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1574": {
      "op": "NOT"
    },
    "1575": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1576": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1577": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "ADD",
      "path": "9"
    },
    "1578": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1579": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1580": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "MUL",
      "path": "9"
    },
    "1581": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "ADD",
      "path": "9"
    },
    "1582": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1583": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "op": "SUB"
    },
    "1592": {
      "op": "NOT"
    },
    "1593": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "AND",
      "path": "9"
    },
    "1594": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1595": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1596": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1598": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "ADD",
      "path": "9"
    },
    "1599": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1600": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1601": {
      "fn": "DataProviders.declineNode",
      "offset": [
        3622,
        3640
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1602": {
      "fn": "DataProviders.declineNode",
      "jump": "o",
      "offset": [
        3434,
        3647
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1603": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2224,
        2519
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1604": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2303,
        2313
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 11
    },
    "1605": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2302
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1607": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1608": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1609": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1610": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1612": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1613": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1614": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1615": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1617": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1618": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1619": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2314
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1620": {
      "branch": 25,
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2293,
        2319
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1621": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6A0"
    },
    "1624": {
      "branch": 25,
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1625": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1627": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1636": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1639": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1641": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1642": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "ADD",
      "path": "9"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1648": {
      "op": "DUP3"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "op": "MSTORE"
    },
    "1651": {
      "op": "PUSH32",
      "value": "0x4164647265737320616C7265616479206D61646520726571756573742E000000"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1686": {
      "op": "DUP3"
    },
    "1687": {
      "op": "ADD"
    },
    "1688": {
      "op": "MSTORE"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1691": {
      "op": "ADD"
    },
    "1692": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "1695": {
      "op": "JUMP"
    },
    "1696": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2285,
        2353
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1697": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2373,
        2383
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 12
    },
    "1698": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2372
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1700": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1701": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1702": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1703": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1705": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1706": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1707": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1708": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1710": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1711": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1712": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2384
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1713": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2387,
        2388
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1715": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2388
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1716": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2388
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1717": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2388
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1718": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2363,
        2388
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1719": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 13
    },
    "1720": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1721": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1722": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1723": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "ADD",
      "path": "9"
    },
    "1724": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1725": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1726": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1727": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1728": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1729": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1730": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1731": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1732": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "ADD",
      "path": "9"
    },
    "1733": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1734": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1735": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2416,
        2511
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1736": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1738": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1739": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1740": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1741": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1742": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "ADD",
      "path": "9"
    },
    "1743": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1744": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1745": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1746": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1747": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1748": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1749": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1782": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1784": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1785": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1786": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "MUL",
      "path": "9"
    },
    "1787": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1788": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1789": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "ADD",
      "path": "9"
    },
    "1790": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1791": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "SUB"
    },
    "1800": {
      "op": "NOT"
    },
    "1801": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "AND",
      "path": "9"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "SUB"
    },
    "1810": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1811": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1812": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "AND",
      "path": "9"
    },
    "1813": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1814": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1815": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1816": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "OR",
      "path": "9"
    },
    "1817": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1818": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1819": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1820": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1821": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C"
    },
    "1854": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1855": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1856": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "ADD",
      "path": "9"
    },
    "1857": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        2398,
        2512
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1858": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "o",
      "offset": [
        2224,
        2519
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1859": {
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1860": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1862": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1863": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1864": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1865": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1866": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "LT",
      "path": "9"
    },
    "1867": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x753"
    },
    "1870": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1871": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1873": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1874": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1875": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1876": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1878": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1879": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1880": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1881": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1883": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1884": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1885": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1886": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "1888": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1889": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1890": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "MUL",
      "path": "9"
    },
    "1891": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "9"
    },
    "1892": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1893": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1894": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x71"
    },
    "1896": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1897": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1898": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "9"
    },
    "1899": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1906": {
      "op": "SHL"
    },
    "1907": {
      "op": "SUB"
    },
    "1908": {
      "offset": [
        822,
        846
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1909": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "AND",
      "path": "9"
    },
    "1910": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1911": {
      "op": "POP"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1916": {
      "op": "SHL"
    },
    "1917": {
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1918": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1919": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DIV",
      "path": "9"
    },
    "1920": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1922": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "AND",
      "path": "9"
    },
    "1923": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1924": {
      "fn": "DataProviders.requestJoinNode",
      "offset": [
        822,
        846
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1925": {
      "fn": "DataProviders.requestJoinNode",
      "jump": "o",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1926": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2850,
        3360
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1927": {
      "offset": [
        1100,
        1118
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x78F"
    },
    "1930": {
      "offset": [
        1107,
        1117
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1931": {
      "offset": [
        1100,
        1106
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x258"
    },
    "1934": {
      "jump": "i",
      "offset": [
        1100,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1935": {
      "branch": 26,
      "fn": "DataProviders.acceptNode",
      "offset": [
        1100,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1936": {
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7AB"
    },
    "1939": {
      "branch": 26,
      "offset": [
        1079,
        1183
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1940": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1942": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "offset": [
        1079,
        1183
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1951": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1952": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1954": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "ADD",
      "path": "9"
    },
    "1955": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "1958": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1959": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xED5"
    },
    "1962": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        1079,
        1183
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1963": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        1079,
        1183
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1964": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2930,
        2942
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 14,
      "value": "0x3"
    },
    "1966": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2930,
        2949
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1967": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7F3"
    },
    "1970": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1971": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1973": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1982": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1985": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1987": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1988": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "ADD",
      "path": "9"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1994": {
      "op": "DUP3"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH22",
      "value": "0x2737903932B8BAB2B9BA103A3790383937B1B2B9B997"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2022": {
      "op": "SHL"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2025": {
      "op": "DUP3"
    },
    "2026": {
      "op": "ADD"
    },
    "2027": {
      "op": "MSTORE"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "2034": {
      "op": "JUMP"
    },
    "2035": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2922,
        2980
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2036": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3050,
        3060
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 15,
      "value": "0x1"
    },
    "2038": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3050,
        3067
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2039": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3050,
        3071
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x801"
    },
    "2042": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3050,
        3071
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2043": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3070,
        3071
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2045": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3050,
        3071
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFAF"
    },
    "2048": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3050,
        3071
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2049": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3050,
        3071
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2050": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3012
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2052": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3013,
        3032
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2053": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3013,
        3032
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2054": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        2999
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2056": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        2999
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2057": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        2999
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2058": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        2999
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2059": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3013,
        3036
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x816"
    },
    "2062": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3013,
        3036
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2063": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3035,
        3036
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2065": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3035,
        3036
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2066": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3013,
        3036
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "2069": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3013,
        3036
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2070": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3013,
        3036
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2071": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2072": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2073": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2074": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "LT",
      "path": "9"
    },
    "2075": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x826"
    },
    "2078": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2079": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x826"
    },
    "2082": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "2085": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3000,
        3037
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2086": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2087": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2089": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2090": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2091": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2092": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2094": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2095": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2096": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2097": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2099": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2100": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2101": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "MUL",
      "path": "9"
    },
    "2102": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "ADD",
      "path": "9"
    },
    "2103": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3046
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "SUB"
    },
    "2112": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3046
      ],
      "op": "AND",
      "path": "9"
    },
    "2113": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2114": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2115": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2116": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "ADD",
      "path": "9"
    },
    "2117": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2118": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2119": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2120": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2121": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2123": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2124": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2125": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "ADD",
      "path": "9"
    },
    "2126": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2127": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3047
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2128": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3071
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2129": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3071
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2130": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3071
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2131": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        2990,
        3071
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2132": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 16
    },
    "2133": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2134": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3046
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2136": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3046
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2137": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3037
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2138": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3089
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2140": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3089
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2141": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x875"
    },
    "2144": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2145": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3046
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2146": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3000,
        3046
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2147": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x100000000"
    },
    "2153": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2154": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "DIV",
      "path": "9"
    },
    "2155": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2160": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "AND",
      "path": "9"
    },
    "2161": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFC7"
    },
    "2164": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3082,
        3094
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2165": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2166": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2167": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "POP",
      "path": "9"
    },
    "2168": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "2171": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "EXP",
      "path": "9"
    },
    "2172": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2173": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2174": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2175": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2180": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "MUL",
      "path": "9"
    },
    "2181": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "NOT",
      "path": "9"
    },
    "2182": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "AND",
      "path": "9"
    },
    "2183": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2184": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2185": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2190": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "AND",
      "path": "9"
    },
    "2191": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "MUL",
      "path": "9"
    },
    "2192": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "OR",
      "path": "9"
    },
    "2193": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2194": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2195": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3082,
        3094
      ],
      "op": "POP",
      "path": "9"
    },
    "2196": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3114
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 17,
      "value": "0x1"
    },
    "2198": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2200": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2201": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2202": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2204": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "ADD",
      "path": "9"
    },
    "2205": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2207": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2208": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2209": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3161
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2211": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3184,
        3185
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2213": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2215": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3181
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2216": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3181
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2217": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3181
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2218": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3181
      ],
      "op": "POP",
      "path": "9"
    },
    "2219": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3185
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8B4"
    },
    "2222": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3185
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2223": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3185
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2224": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3185
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "2227": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3162,
        3185
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2228": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3162,
        3185
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2229": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2230": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2231": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2232": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "LT",
      "path": "9"
    },
    "2233": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8C4"
    },
    "2236": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2237": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8C4"
    },
    "2240": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "2243": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3149,
        3186
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2244": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2245": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2247": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2248": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2249": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2250": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2252": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2253": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2254": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2255": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2257": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2258": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2259": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "MUL",
      "path": "9"
    },
    "2260": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3186
      ],
      "op": "ADD",
      "path": "9"
    },
    "2261": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3195
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3195
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2271": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3195
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2272": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3195
      ],
      "op": "AND",
      "path": "9"
    },
    "2273": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2274": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2275": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3149,
        3195
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2277": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2278": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2279": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "ADD",
      "path": "9"
    },
    "2280": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2281": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2282": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2283": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2285": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2286": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2287": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "ADD",
      "path": "9"
    },
    "2288": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "DUP11",
      "path": "9"
    },
    "2289": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2290": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2291": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2292": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2293": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2298": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x100000000"
    },
    "2304": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2305": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2306": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "DIV",
      "path": "9"
    },
    "2307": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3280,
        3287
      ],
      "op": "AND",
      "path": "9"
    },
    "2308": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "2310": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2311": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "2312": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "ADD",
      "path": "9"
    },
    "2313": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2314": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2315": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2316": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3120,
        3298
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2317": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2318": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2319": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2320": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2321": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ADD",
      "path": "9"
    },
    "2322": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP9",
      "path": "9"
    },
    "2323": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2324": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "2325": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2326": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2327": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2328": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2329": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2330": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2331": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2332": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2333": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "2335": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2336": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "2337": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "MUL",
      "path": "9"
    },
    "2338": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ADD",
      "path": "9"
    },
    "2339": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2340": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2341": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2342": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2343": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ADD",
      "path": "9"
    },
    "2344": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2345": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2346": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2351": {
      "op": "SHL"
    },
    "2352": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "MUL",
      "path": "9"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2359": {
      "op": "SHL"
    },
    "2360": {
      "op": "SUB"
    },
    "2361": {
      "op": "NOT"
    },
    "2362": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2363": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2364": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "AND",
      "path": "9"
    },
    "2365": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "2366": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2367": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2368": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "AND",
      "path": "9"
    },
    "2369": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2370": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2371": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "2372": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "OR",
      "path": "9"
    },
    "2373": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2374": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2375": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2376": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "OR",
      "path": "9"
    },
    "2377": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2378": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2379": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2380": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2381": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ADD",
      "path": "9"
    },
    "2382": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2383": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2384": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2385": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2386": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x95F"
    },
    "2389": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2390": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2391": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ADD",
      "path": "9"
    },
    "2392": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2393": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x70"
    },
    "2395": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB67"
    },
    "2398": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3104,
        3299
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2399": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "2403": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2404": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2405": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2406": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ADD",
      "path": "9"
    },
    "2407": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2408": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x71"
    },
    "2410": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2411": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2412": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "ADD",
      "path": "9"
    },
    "2413": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3104,
        3299
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2414": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3320
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 18,
      "value": "0x2"
    },
    "2416": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2417": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2418": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3324,
        3325
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2420": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3324,
        3325
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2421": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3320
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2422": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2424": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3320
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2425": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x989"
    },
    "2428": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2429": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3324,
        3325
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2430": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3324,
        3325
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2431": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2436": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "AND",
      "path": "9"
    },
    "2437": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFC7"
    },
    "2440": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3309,
        3325
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2441": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2442": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2443": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "POP",
      "path": "9"
    },
    "2444": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "2447": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "EXP",
      "path": "9"
    },
    "2448": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2449": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2450": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2451": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2456": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "MUL",
      "path": "9"
    },
    "2457": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "NOT",
      "path": "9"
    },
    "2458": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "AND",
      "path": "9"
    },
    "2459": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2460": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2461": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2466": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "AND",
      "path": "9"
    },
    "2467": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "MUL",
      "path": "9"
    },
    "2468": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "OR",
      "path": "9"
    },
    "2469": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2470": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2471": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3309,
        3325
      ],
      "op": "POP",
      "path": "9"
    },
    "2472": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3347
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 19,
      "value": "0x3"
    },
    "2474": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2475": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2476": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2477": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9B8"
    },
    "2480": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2481": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9B8"
    },
    "2484": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF99"
    },
    "2487": {
      "fn": "DataProviders.acceptNode",
      "jump": "i",
      "offset": [
        3335,
        3353
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2488": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2489": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2491": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2492": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2493": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2494": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2496": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2497": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2498": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2502": {
      "op": "NOT"
    },
    "2503": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2504": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2505": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "ADD",
      "path": "9"
    },
    "2506": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2507": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2508": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "MUL",
      "path": "9"
    },
    "2509": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "ADD",
      "path": "9"
    },
    "2510": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2511": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "op": "NOT"
    },
    "2521": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "AND",
      "path": "9"
    },
    "2522": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2523": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2524": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2526": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "ADD",
      "path": "9"
    },
    "2527": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2528": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2529": {
      "fn": "DataProviders.acceptNode",
      "offset": [
        3335,
        3353
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "fn": "DataProviders.acceptNode",
      "jump": "o",
      "offset": [
        2850,
        3360
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2532": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4373,
        4719
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2533": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4456,
        4472
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 20,
      "value": "0x9ED"
    },
    "2536": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4463,
        4471
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2537": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4456,
        4462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x258"
    },
    "2540": {
      "fn": "DataProviders._deactivateNode",
      "jump": "i",
      "offset": [
        4456,
        4472
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2541": {
      "branch": 27,
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4456,
        4472
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2542": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA39"
    },
    "2545": {
      "branch": 27,
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2546": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2548": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2557": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2560": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2562": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2563": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "ADD",
      "path": "9"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "MSTORE"
    },
    "2572": {
      "op": "PUSH32",
      "value": "0x41646472657373206973206E6F742076616C6964206E6F64652E000000000000"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2607": {
      "op": "DUP3"
    },
    "2608": {
      "op": "ADD"
    },
    "2609": {
      "op": "MSTORE"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2612": {
      "op": "ADD"
    },
    "2613": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "2616": {
      "op": "JUMP"
    },
    "2617": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4435,
        4524
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2624": {
      "op": "SHL"
    },
    "2625": {
      "op": "SUB"
    },
    "2626": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 21
    },
    "2627": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "AND",
      "path": "9"
    },
    "2628": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2630": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2631": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2632": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2633": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2635": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2636": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2637": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2638": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2640": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2641": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2642": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4585
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2643": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2645": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4565
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2646": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4589
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA61"
    },
    "2649": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4589
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2650": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4588,
        4589
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2652": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4588,
        4589
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2653": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4589
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "2656": {
      "fn": "DataProviders._deactivateNode",
      "jump": "i",
      "offset": [
        4566,
        4589
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2657": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4566,
        4589
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2658": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2659": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2660": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2661": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "LT",
      "path": "9"
    },
    "2662": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA71"
    },
    "2665": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2666": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA71"
    },
    "2669": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "2672": {
      "fn": "DataProviders._deactivateNode",
      "jump": "i",
      "offset": [
        4555,
        4590
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2673": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2674": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2676": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2677": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2678": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2679": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2681": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2682": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2683": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2684": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "2686": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2687": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2688": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "MUL",
      "path": "9"
    },
    "2689": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4590
      ],
      "op": "ADD",
      "path": "9"
    },
    "2690": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4600
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2695": {
      "op": "SHL"
    },
    "2696": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4600
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2697": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4600
      ],
      "op": "DIV",
      "path": "9"
    },
    "2698": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4600
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2700": {
      "branch": 28,
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4555,
        4600
      ],
      "op": "AND",
      "path": "9"
    },
    "2701": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAD8"
    },
    "2704": {
      "branch": 28,
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2705": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2707": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2714": {
      "op": "SHL"
    },
    "2715": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2716": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2719": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2721": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2722": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "ADD",
      "path": "9"
    },
    "2723": {
      "op": "MSTORE"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2728": {
      "op": "DUP3"
    },
    "2729": {
      "op": "ADD"
    },
    "2730": {
      "op": "MSTORE"
    },
    "2731": {
      "op": "PUSH32",
      "value": "0x4E6F646520697320616C726561647920696E6163746976650000000000000000"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2766": {
      "op": "DUP3"
    },
    "2767": {
      "op": "ADD"
    },
    "2768": {
      "op": "MSTORE"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2771": {
      "op": "ADD"
    },
    "2772": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C"
    },
    "2775": {
      "op": "JUMP"
    },
    "2776": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4534,
        4650
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "op": "SUB"
    },
    "2785": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 22
    },
    "2786": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "AND",
      "path": "9"
    },
    "2787": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4680
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2789": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2790": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2791": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2792": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2794": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2795": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2796": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2797": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2799": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2800": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2801": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4690
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2802": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4708,
        4712
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2804": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4708,
        4712
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2805": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4708,
        4712
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2806": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4708,
        4712
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2807": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4694
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB02"
    },
    "2810": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4694
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2811": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4693,
        4694
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2813": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4693,
        4694
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2814": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4694
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF32"
    },
    "2817": {
      "fn": "DataProviders._deactivateNode",
      "jump": "i",
      "offset": [
        4671,
        4694
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2818": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4671,
        4694
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2819": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2820": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2821": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2822": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "LT",
      "path": "9"
    },
    "2823": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB12"
    },
    "2826": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2827": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB12"
    },
    "2830": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF49"
    },
    "2833": {
      "fn": "DataProviders._deactivateNode",
      "jump": "i",
      "offset": [
        4660,
        4695
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2834": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2835": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2837": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2838": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2839": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2840": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2842": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2843": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2844": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2845": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x72"
    },
    "2847": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2848": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2849": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "MUL",
      "path": "9"
    },
    "2850": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4695
      ],
      "op": "ADD",
      "path": "9"
    },
    "2851": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2852": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2853": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2854": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2855": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "MUL",
      "path": "9"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2866": {
      "op": "SHL"
    },
    "2867": {
      "op": "NOT"
    },
    "2868": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2869": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2870": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "AND",
      "path": "9"
    },
    "2871": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2872": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2873": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2874": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "OR",
      "path": "9"
    },
    "2875": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2876": {
      "fn": "DataProviders._deactivateNode",
      "offset": [
        4660,
        4712
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "fn": "DataProviders._deactivateNode",
      "jump": "o",
      "offset": [
        4373,
        4719
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2879": {
      "op": "JUMPDEST"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2882": {
      "op": "MLOAD"
    },
    "2883": {
      "op": "DUP1"
    },
    "2884": {
      "op": "PUSH2",
      "value": "0xE00"
    },
    "2887": {
      "op": "ADD"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2890": {
      "op": "MSTORE"
    },
    "2891": {
      "op": "DUP1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2894": {
      "op": "SWAP1"
    },
    "2895": {
      "op": "JUMPDEST"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2898": {
      "op": "DUP2"
    },
    "2899": {
      "op": "MSTORE"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "SWAP1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "SWAP1"
    },
    "2907": {
      "op": "SUB"
    },
    "2908": {
      "op": "SWAP1"
    },
    "2909": {
      "op": "DUP2"
    },
    "2910": {
      "op": "PUSH2",
      "value": "0xB4F"
    },
    "2913": {
      "op": "JUMPI"
    },
    "2914": {
      "op": "SWAP1"
    },
    "2915": {
      "op": "POP"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "op": "SWAP1"
    },
    "2918": {
      "jump": "o",
      "op": "JUMP"
    },
    "2919": {
      "op": "JUMPDEST"
    },
    "2920": {
      "op": "DUP3"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2923": {
      "op": "DUP2"
    },
    "2924": {
      "op": "ADD"
    },
    "2925": {
      "op": "SWAP3"
    },
    "2926": {
      "op": "DUP3"
    },
    "2927": {
      "op": "ISZERO"
    },
    "2928": {
      "op": "PUSH2",
      "value": "0xBA7"
    },
    "2931": {
      "op": "JUMPI"
    },
    "2932": {
      "op": "SWAP2"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2935": {
      "op": "MUL"
    },
    "2936": {
      "op": "DUP3"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "op": "JUMPDEST"
    },
    "2939": {
      "op": "DUP3"
    },
    "2940": {
      "op": "DUP2"
    },
    "2941": {
      "op": "GT"
    },
    "2942": {
      "op": "ISZERO"
    },
    "2943": {
      "op": "PUSH2",
      "value": "0xBA7"
    },
    "2946": {
      "op": "JUMPI"
    },
    "2947": {
      "op": "DUP3"
    },
    "2948": {
      "op": "MLOAD"
    },
    "2949": {
      "op": "DUP1"
    },
    "2950": {
      "op": "MLOAD"
    },
    "2951": {
      "op": "PUSH2",
      "value": "0xB97"
    },
    "2954": {
      "op": "SWAP2"
    },
    "2955": {
      "op": "DUP5"
    },
    "2956": {
      "op": "SWAP2"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2959": {
      "op": "SWAP1"
    },
    "2960": {
      "op": "SWAP2"
    },
    "2961": {
      "op": "ADD"
    },
    "2962": {
      "op": "SWAP1"
    },
    "2963": {
      "op": "PUSH2",
      "value": "0xBB7"
    },
    "2966": {
      "jump": "i",
      "op": "JUMP"
    },
    "2967": {
      "op": "JUMPDEST"
    },
    "2968": {
      "op": "POP"
    },
    "2969": {
      "op": "SWAP2"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2972": {
      "op": "ADD"
    },
    "2973": {
      "op": "SWAP2"
    },
    "2974": {
      "op": "SWAP1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "ADD"
    },
    "2978": {
      "op": "SWAP1"
    },
    "2979": {
      "op": "PUSH2",
      "value": "0xB7A"
    },
    "2982": {
      "op": "JUMP"
    },
    "2983": {
      "op": "JUMPDEST"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "2988": {
      "op": "SWAP3"
    },
    "2989": {
      "op": "SWAP2"
    },
    "2990": {
      "op": "POP"
    },
    "2991": {
      "op": "PUSH2",
      "value": "0xC37"
    },
    "2994": {
      "jump": "i",
      "op": "JUMP"
    },
    "2995": {
      "op": "JUMPDEST"
    },
    "2996": {
      "op": "POP"
    },
    "2997": {
      "op": "SWAP1"
    },
    "2998": {
      "jump": "o",
      "op": "JUMP"
    },
    "2999": {
      "op": "JUMPDEST"
    },
    "3000": {
      "op": "DUP3"
    },
    "3001": {
      "op": "DUP1"
    },
    "3002": {
      "op": "SLOAD"
    },
    "3003": {
      "op": "PUSH2",
      "value": "0xBC3"
    },
    "3006": {
      "op": "SWAP1"
    },
    "3007": {
      "op": "PUSH2",
      "value": "0xF5F"
    },
    "3010": {
      "jump": "i",
      "op": "JUMP"
    },
    "3011": {
      "op": "JUMPDEST"
    },
    "3012": {
      "op": "SWAP1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3015": {
      "op": "MSTORE"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3020": {
      "op": "KECCAK256"
    },
    "3021": {
      "op": "SWAP1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3027": {
      "op": "SWAP1"
    },
    "3028": {
      "op": "DIV"
    },
    "3029": {
      "op": "DUP2"
    },
    "3030": {
      "op": "ADD"
    },
    "3031": {
      "op": "SWAP3"
    },
    "3032": {
      "op": "DUP3"
    },
    "3033": {
      "op": "PUSH2",
      "value": "0xBE5"
    },
    "3036": {
      "op": "JUMPI"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3039": {
      "op": "DUP6"
    },
    "3040": {
      "op": "SSTORE"
    },
    "3041": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3044": {
      "op": "JUMP"
    },
    "3045": {
      "op": "JUMPDEST"
    },
    "3046": {
      "op": "DUP3"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3049": {
      "op": "LT"
    },
    "3050": {
      "op": "PUSH2",
      "value": "0xBFE"
    },
    "3053": {
      "op": "JUMPI"
    },
    "3054": {
      "op": "DUP1"
    },
    "3055": {
      "op": "MLOAD"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3058": {
      "op": "NOT"
    },
    "3059": {
      "op": "AND"
    },
    "3060": {
      "op": "DUP4"
    },
    "3061": {
      "op": "DUP1"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "OR"
    },
    "3064": {
      "op": "DUP6"
    },
    "3065": {
      "op": "SSTORE"
    },
    "3066": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3069": {
      "op": "JUMP"
    },
    "3070": {
      "op": "JUMPDEST"
    },
    "3071": {
      "op": "DUP3"
    },
    "3072": {
      "op": "DUP1"
    },
    "3073": {
      "op": "ADD"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3076": {
      "op": "ADD"
    },
    "3077": {
      "op": "DUP6"
    },
    "3078": {
      "op": "SSTORE"
    },
    "3079": {
      "op": "DUP3"
    },
    "3080": {
      "op": "ISZERO"
    },
    "3081": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3084": {
      "op": "JUMPI"
    },
    "3085": {
      "op": "SWAP2"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "JUMPDEST"
    },
    "3089": {
      "op": "DUP3"
    },
    "3090": {
      "op": "DUP2"
    },
    "3091": {
      "op": "GT"
    },
    "3092": {
      "op": "ISZERO"
    },
    "3093": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3096": {
      "op": "JUMPI"
    },
    "3097": {
      "op": "DUP3"
    },
    "3098": {
      "op": "MLOAD"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "SSTORE"
    },
    "3101": {
      "op": "SWAP2"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "SWAP2"
    },
    "3106": {
      "op": "SWAP1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "op": "SWAP1"
    },
    "3111": {
      "op": "PUSH2",
      "value": "0xC10"
    },
    "3114": {
      "op": "JUMP"
    },
    "3115": {
      "op": "JUMPDEST"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "3120": {
      "op": "SWAP3"
    },
    "3121": {
      "op": "SWAP2"
    },
    "3122": {
      "op": "POP"
    },
    "3123": {
      "op": "PUSH2",
      "value": "0xC54"
    },
    "3126": {
      "jump": "i",
      "op": "JUMP"
    },
    "3127": {
      "op": "JUMPDEST"
    },
    "3128": {
      "op": "DUP1"
    },
    "3129": {
      "op": "DUP3"
    },
    "3130": {
      "op": "GT"
    },
    "3131": {
      "op": "ISZERO"
    },
    "3132": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "3135": {
      "op": "JUMPI"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3138": {
      "op": "PUSH2",
      "value": "0xC4B"
    },
    "3141": {
      "op": "DUP3"
    },
    "3142": {
      "op": "DUP3"
    },
    "3143": {
      "op": "PUSH2",
      "value": "0xC69"
    },
    "3146": {
      "jump": "i",
      "op": "JUMP"
    },
    "3147": {
      "op": "JUMPDEST"
    },
    "3148": {
      "op": "POP"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3151": {
      "op": "ADD"
    },
    "3152": {
      "op": "PUSH2",
      "value": "0xC37"
    },
    "3155": {
      "op": "JUMP"
    },
    "3156": {
      "op": "JUMPDEST"
    },
    "3157": {
      "op": "JUMPDEST"
    },
    "3158": {
      "op": "DUP1"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "GT"
    },
    "3161": {
      "op": "ISZERO"
    },
    "3162": {
      "op": "PUSH2",
      "value": "0xBB3"
    },
    "3165": {
      "op": "JUMPI"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3168": {
      "op": "DUP2"
    },
    "3169": {
      "op": "SSTORE"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3172": {
      "op": "ADD"
    },
    "3173": {
      "op": "PUSH2",
      "value": "0xC55"
    },
    "3176": {
      "op": "JUMP"
    },
    "3177": {
      "op": "JUMPDEST"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "op": "DUP1"
    },
    "3180": {
      "op": "SLOAD"
    },
    "3181": {
      "op": "PUSH2",
      "value": "0xC75"
    },
    "3184": {
      "op": "SWAP1"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xF5F"
    },
    "3188": {
      "jump": "i",
      "op": "JUMP"
    },
    "3189": {
      "op": "JUMPDEST"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3192": {
      "op": "DUP3"
    },
    "3193": {
      "op": "SSTORE"
    },
    "3194": {
      "op": "DUP1"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3197": {
      "op": "LT"
    },
    "3198": {
      "op": "PUSH2",
      "value": "0xC85"
    },
    "3201": {
      "op": "JUMPI"
    },
    "3202": {
      "op": "POP"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "jump": "o",
      "op": "JUMP"
    },
    "3205": {
      "op": "JUMPDEST"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3208": {
      "op": "ADD"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3211": {
      "op": "SWAP1"
    },
    "3212": {
      "op": "DIV"
    },
    "3213": {
      "op": "SWAP1"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3216": {
      "op": "MSTORE"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3221": {
      "op": "KECCAK256"
    },
    "3222": {
      "op": "SWAP1"
    },
    "3223": {
      "op": "DUP2"
    },
    "3224": {
      "op": "ADD"
    },
    "3225": {
      "op": "SWAP1"
    },
    "3226": {
      "op": "PUSH2",
      "value": "0xCA3"
    },
    "3229": {
      "op": "SWAP2"
    },
    "3230": {
      "op": "SWAP1"
    },
    "3231": {
      "op": "PUSH2",
      "value": "0xC54"
    },
    "3234": {
      "jump": "i",
      "op": "JUMP"
    },
    "3235": {
      "op": "JUMPDEST"
    },
    "3236": {
      "op": "POP"
    },
    "3237": {
      "jump": "o",
      "op": "JUMP"
    },
    "3238": {
      "op": "JUMPDEST"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3243": {
      "op": "DUP3"
    },
    "3244": {
      "op": "DUP5"
    },
    "3245": {
      "op": "SUB"
    },
    "3246": {
      "op": "SLT"
    },
    "3247": {
      "op": "ISZERO"
    },
    "3248": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "3251": {
      "op": "JUMPI"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3254": {
      "op": "DUP1"
    },
    "3255": {
      "op": "REVERT"
    },
    "3256": {
      "op": "JUMPDEST"
    },
    "3257": {
      "op": "DUP2"
    },
    "3258": {
      "op": "CALLDATALOAD"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "op": "SUB"
    },
    "3267": {
      "op": "DUP2"
    },
    "3268": {
      "op": "AND"
    },
    "3269": {
      "op": "DUP2"
    },
    "3270": {
      "op": "EQ"
    },
    "3271": {
      "op": "PUSH2",
      "value": "0xCCF"
    },
    "3274": {
      "op": "JUMPI"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3277": {
      "op": "DUP1"
    },
    "3278": {
      "op": "REVERT"
    },
    "3279": {
      "op": "JUMPDEST"
    },
    "3280": {
      "op": "SWAP4"
    },
    "3281": {
      "op": "SWAP3"
    },
    "3282": {
      "op": "POP"
    },
    "3283": {
      "op": "POP"
    },
    "3284": {
      "op": "POP"
    },
    "3285": {
      "jump": "o",
      "op": "JUMP"
    },
    "3286": {
      "op": "JUMPDEST"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3289": {
      "op": "DUP1"
    },
    "3290": {
      "op": "DUP3"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3294": {
      "op": "SWAP1"
    },
    "3295": {
      "op": "PUSH2",
      "value": "0xE20"
    },
    "3298": {
      "op": "DUP4"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "DUP4"
    },
    "3301": {
      "op": "DUP3"
    },
    "3302": {
      "op": "ADD"
    },
    "3303": {
      "op": "DUP6"
    },
    "3304": {
      "op": "DUP5"
    },
    "3305": {
      "op": "DUP1"
    },
    "3306": {
      "op": "JUMPDEST"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3309": {
      "op": "DUP2"
    },
    "3310": {
      "op": "LT"
    },
    "3311": {
      "op": "ISZERO"
    },
    "3312": {
      "op": "PUSH2",
      "value": "0xD50"
    },
    "3315": {
      "op": "JUMPI"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3318": {
      "op": "NOT"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "DUP10"
    },
    "3321": {
      "op": "DUP8"
    },
    "3322": {
      "op": "SUB"
    },
    "3323": {
      "op": "ADD"
    },
    "3324": {
      "op": "DUP6"
    },
    "3325": {
      "op": "MSTORE"
    },
    "3326": {
      "op": "DUP4"
    },
    "3327": {
      "op": "MLOAD"
    },
    "3328": {
      "op": "DUP1"
    },
    "3329": {
      "op": "MLOAD"
    },
    "3330": {
      "op": "DUP1"
    },
    "3331": {
      "op": "DUP9"
    },
    "3332": {
      "op": "MSTORE"
    },
    "3333": {
      "op": "DUP5"
    },
    "3334": {
      "op": "JUMPDEST"
    },
    "3335": {
      "op": "DUP2"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "LT"
    },
    "3338": {
      "op": "ISZERO"
    },
    "3339": {
      "op": "PUSH2",
      "value": "0xD21"
    },
    "3342": {
      "op": "JUMPI"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "op": "DUP2"
    },
    "3345": {
      "op": "ADD"
    },
    "3346": {
      "op": "DUP11"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "MLOAD"
    },
    "3349": {
      "op": "DUP10"
    },
    "3350": {
      "op": "DUP3"
    },
    "3351": {
      "op": "ADD"
    },
    "3352": {
      "op": "DUP12"
    },
    "3353": {
      "op": "ADD"
    },
    "3354": {
      "op": "MSTORE"
    },
    "3355": {
      "op": "DUP10"
    },
    "3356": {
      "op": "ADD"
    },
    "3357": {
      "op": "PUSH2",
      "value": "0xD06"
    },
    "3360": {
      "op": "JUMP"
    },
    "3361": {
      "op": "JUMPDEST"
    },
    "3362": {
      "op": "DUP2"
    },
    "3363": {
      "op": "DUP2"
    },
    "3364": {
      "op": "GT"
    },
    "3365": {
      "op": "ISZERO"
    },
    "3366": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "3369": {
      "op": "JUMPI"
    },
    "3370": {
      "op": "DUP6"
    },
    "3371": {
      "op": "DUP11"
    },
    "3372": {
      "op": "DUP4"
    },
    "3373": {
      "op": "DUP12"
    },
    "3374": {
      "op": "ADD"
    },
    "3375": {
      "op": "ADD"
    },
    "3376": {
      "op": "MSTORE"
    },
    "3377": {
      "op": "JUMPDEST"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3381": {
      "op": "ADD"
    },
    "3382": {
      "op": "SWAP1"
    },
    "3383": {
      "op": "SWAP2"
    },
    "3384": {
      "op": "AND"
    },
    "3385": {
      "op": "SWAP6"
    },
    "3386": {
      "op": "SWAP1"
    },
    "3387": {
      "op": "SWAP6"
    },
    "3388": {
      "op": "ADD"
    },
    "3389": {
      "op": "DUP7"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "SWAP5"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "op": "SWAP3"
    },
    "3394": {
      "op": "DUP6"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "op": "SWAP3"
    },
    "3397": {
      "op": "SWAP2"
    },
    "3398": {
      "op": "DUP6"
    },
    "3399": {
      "op": "ADD"
    },
    "3400": {
      "op": "SWAP2"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "PUSH2",
      "value": "0xCEA"
    },
    "3407": {
      "op": "JUMP"
    },
    "3408": {
      "op": "JUMPDEST"
    },
    "3409": {
      "op": "POP"
    },
    "3410": {
      "op": "SWAP3"
    },
    "3411": {
      "op": "SWAP8"
    },
    "3412": {
      "op": "SWAP7"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "op": "POP"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "jump": "o",
      "op": "JUMP"
    },
    "3421": {
      "op": "JUMPDEST"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3426": {
      "op": "DUP3"
    },
    "3427": {
      "op": "DUP5"
    },
    "3428": {
      "op": "SUB"
    },
    "3429": {
      "op": "SLT"
    },
    "3430": {
      "op": "ISZERO"
    },
    "3431": {
      "op": "PUSH2",
      "value": "0xD6F"
    },
    "3434": {
      "op": "JUMPI"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3437": {
      "op": "DUP1"
    },
    "3438": {
      "op": "REVERT"
    },
    "3439": {
      "op": "JUMPDEST"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "CALLDATALOAD"
    },
    "3442": {
      "op": "SWAP2"
    },
    "3443": {
      "op": "SWAP1"
    },
    "3444": {
      "op": "POP"
    },
    "3445": {
      "jump": "o",
      "op": "JUMP"
    },
    "3446": {
      "op": "JUMPDEST"
    },
    "3447": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3454": {
      "op": "SHL"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3457": {
      "op": "MSTORE"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3462": {
      "op": "MSTORE"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3467": {
      "op": "REVERT"
    },
    "3468": {
      "op": "JUMPDEST"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3471": {
      "op": "MLOAD"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0xE00"
    },
    "3475": {
      "op": "DUP2"
    },
    "3476": {
      "op": "ADD"
    },
    "3477": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3486": {
      "op": "DUP2"
    },
    "3487": {
      "op": "GT"
    },
    "3488": {
      "op": "DUP3"
    },
    "3489": {
      "op": "DUP3"
    },
    "3490": {
      "op": "LT"
    },
    "3491": {
      "op": "OR"
    },
    "3492": {
      "op": "ISZERO"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xDB0"
    },
    "3496": {
      "op": "JUMPI"
    },
    "3497": {
      "op": "PUSH2",
      "value": "0xDB0"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3503": {
      "jump": "i",
      "op": "JUMP"
    },
    "3504": {
      "op": "JUMPDEST"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3507": {
      "op": "MSTORE"
    },
    "3508": {
      "op": "SWAP1"
    },
    "3509": {
      "jump": "o",
      "op": "JUMP"
    },
    "3510": {
      "op": "JUMPDEST"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3513": {
      "op": "MLOAD"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3516": {
      "op": "DUP3"
    },
    "3517": {
      "op": "ADD"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3520": {
      "op": "NOT"
    },
    "3521": {
      "op": "AND"
    },
    "3522": {
      "op": "DUP2"
    },
    "3523": {
      "op": "ADD"
    },
    "3524": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3533": {
      "op": "DUP2"
    },
    "3534": {
      "op": "GT"
    },
    "3535": {
      "op": "DUP3"
    },
    "3536": {
      "op": "DUP3"
    },
    "3537": {
      "op": "LT"
    },
    "3538": {
      "op": "OR"
    },
    "3539": {
      "op": "ISZERO"
    },
    "3540": {
      "op": "PUSH2",
      "value": "0xDDF"
    },
    "3543": {
      "op": "JUMPI"
    },
    "3544": {
      "op": "PUSH2",
      "value": "0xDDF"
    },
    "3547": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3550": {
      "jump": "i",
      "op": "JUMP"
    },
    "3551": {
      "op": "JUMPDEST"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3554": {
      "op": "MSTORE"
    },
    "3555": {
      "op": "SWAP2"
    },
    "3556": {
      "op": "SWAP1"
    },
    "3557": {
      "op": "POP"
    },
    "3558": {
      "jump": "o",
      "op": "JUMP"
    },
    "3559": {
      "op": "JUMPDEST"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3564": {
      "op": "DUP1"
    },
    "3565": {
      "op": "DUP4"
    },
    "3566": {
      "op": "DUP6"
    },
    "3567": {
      "op": "SUB"
    },
    "3568": {
      "op": "SLT"
    },
    "3569": {
      "op": "ISZERO"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3573": {
      "op": "JUMPI"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3576": {
      "op": "DUP1"
    },
    "3577": {
      "op": "REVERT"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "DUP3"
    },
    "3580": {
      "op": "CALLDATALOAD"
    },
    "3581": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3590": {
      "op": "DUP1"
    },
    "3591": {
      "op": "DUP3"
    },
    "3592": {
      "op": "GT"
    },
    "3593": {
      "op": "ISZERO"
    },
    "3594": {
      "op": "PUSH2",
      "value": "0xE12"
    },
    "3597": {
      "op": "JUMPI"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3600": {
      "op": "DUP1"
    },
    "3601": {
      "op": "REVERT"
    },
    "3602": {
      "op": "JUMPDEST"
    },
    "3603": {
      "op": "DUP2"
    },
    "3604": {
      "op": "DUP6"
    },
    "3605": {
      "op": "ADD"
    },
    "3606": {
      "op": "SWAP2"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3610": {
      "op": "DUP7"
    },
    "3611": {
      "op": "DUP2"
    },
    "3612": {
      "op": "DUP5"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "SLT"
    },
    "3615": {
      "op": "PUSH2",
      "value": "0xE27"
    },
    "3618": {
      "op": "JUMPI"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3621": {
      "op": "DUP1"
    },
    "3622": {
      "op": "REVERT"
    },
    "3623": {
      "op": "JUMPDEST"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xE2F"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xD8C"
    },
    "3630": {
      "jump": "i",
      "op": "JUMP"
    },
    "3631": {
      "op": "JUMPDEST"
    },
    "3632": {
      "op": "DUP1"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE00"
    },
    "3636": {
      "op": "DUP6"
    },
    "3637": {
      "op": "ADD"
    },
    "3638": {
      "op": "DUP10"
    },
    "3639": {
      "op": "DUP2"
    },
    "3640": {
      "op": "GT"
    },
    "3641": {
      "op": "ISZERO"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3645": {
      "op": "JUMPI"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3648": {
      "op": "DUP1"
    },
    "3649": {
      "op": "REVERT"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "DUP6"
    },
    "3652": {
      "op": "JUMPDEST"
    },
    "3653": {
      "op": "DUP2"
    },
    "3654": {
      "op": "DUP2"
    },
    "3655": {
      "op": "LT"
    },
    "3656": {
      "op": "ISZERO"
    },
    "3657": {
      "op": "PUSH2",
      "value": "0xEC6"
    },
    "3660": {
      "op": "JUMPI"
    },
    "3661": {
      "op": "DUP1"
    },
    "3662": {
      "op": "CALLDATALOAD"
    },
    "3663": {
      "op": "DUP7"
    },
    "3664": {
      "op": "DUP2"
    },
    "3665": {
      "op": "GT"
    },
    "3666": {
      "op": "ISZERO"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3670": {
      "op": "JUMPI"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3673": {
      "op": "DUP1"
    },
    "3674": {
      "op": "DUP2"
    },
    "3675": {
      "op": "REVERT"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "DUP8"
    },
    "3678": {
      "op": "ADD"
    },
    "3679": {
      "op": "DUP6"
    },
    "3680": {
      "op": "DUP2"
    },
    "3681": {
      "op": "ADD"
    },
    "3682": {
      "op": "DUP13"
    },
    "3683": {
      "op": "SGT"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xE6D"
    },
    "3687": {
      "op": "JUMPI"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3690": {
      "op": "DUP1"
    },
    "3691": {
      "op": "DUP2"
    },
    "3692": {
      "op": "REVERT"
    },
    "3693": {
      "op": "JUMPDEST"
    },
    "3694": {
      "op": "DUP1"
    },
    "3695": {
      "op": "CALLDATALOAD"
    },
    "3696": {
      "op": "DUP8"
    },
    "3697": {
      "op": "DUP2"
    },
    "3698": {
      "op": "GT"
    },
    "3699": {
      "op": "ISZERO"
    },
    "3700": {
      "op": "PUSH2",
      "value": "0xE7F"
    },
    "3703": {
      "op": "JUMPI"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xE7F"
    },
    "3707": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3710": {
      "jump": "i",
      "op": "JUMP"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xE90"
    },
    "3715": {
      "op": "DUP2"
    },
    "3716": {
      "op": "DUP9"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3720": {
      "op": "NOT"
    },
    "3721": {
      "op": "AND"
    },
    "3722": {
      "op": "DUP12"
    },
    "3723": {
      "op": "ADD"
    },
    "3724": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3727": {
      "jump": "i",
      "op": "JUMP"
    },
    "3728": {
      "op": "JUMPDEST"
    },
    "3729": {
      "op": "DUP2"
    },
    "3730": {
      "op": "DUP2"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "DUP14"
    },
    "3733": {
      "op": "DUP12"
    },
    "3734": {
      "op": "DUP4"
    },
    "3735": {
      "op": "DUP6"
    },
    "3736": {
      "op": "ADD"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "GT"
    },
    "3739": {
      "op": "ISZERO"
    },
    "3740": {
      "op": "PUSH2",
      "value": "0xEA5"
    },
    "3743": {
      "op": "JUMPI"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3746": {
      "op": "DUP1"
    },
    "3747": {
      "op": "DUP2"
    },
    "3748": {
      "op": "REVERT"
    },
    "3749": {
      "op": "JUMPDEST"
    },
    "3750": {
      "op": "DUP2"
    },
    "3751": {
      "op": "DUP12"
    },
    "3752": {
      "op": "DUP5"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "op": "DUP13"
    },
    "3755": {
      "op": "DUP4"
    },
    "3756": {
      "op": "ADD"
    },
    "3757": {
      "op": "CALLDATACOPY"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3760": {
      "op": "SWAP2"
    },
    "3761": {
      "op": "DUP2"
    },
    "3762": {
      "op": "ADD"
    },
    "3763": {
      "op": "DUP12"
    },
    "3764": {
      "op": "ADD"
    },
    "3765": {
      "op": "SWAP2"
    },
    "3766": {
      "op": "SWAP1"
    },
    "3767": {
      "op": "SWAP2"
    },
    "3768": {
      "op": "MSTORE"
    },
    "3769": {
      "op": "DUP6"
    },
    "3770": {
      "op": "MSTORE"
    },
    "3771": {
      "op": "POP"
    },
    "3772": {
      "op": "SWAP3"
    },
    "3773": {
      "op": "DUP8"
    },
    "3774": {
      "op": "ADD"
    },
    "3775": {
      "op": "SWAP3"
    },
    "3776": {
      "op": "DUP8"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "PUSH2",
      "value": "0xE44"
    },
    "3781": {
      "op": "JUMP"
    },
    "3782": {
      "op": "JUMPDEST"
    },
    "3783": {
      "op": "POP"
    },
    "3784": {
      "op": "SWAP1"
    },
    "3785": {
      "op": "SWAP10"
    },
    "3786": {
      "op": "SWAP9"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "op": "POP"
    },
    "3789": {
      "op": "POP"
    },
    "3790": {
      "op": "POP"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "jump": "o",
      "op": "JUMP"
    },
    "3797": {
      "op": "JUMPDEST"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3800": {
      "op": "DUP1"
    },
    "3801": {
      "op": "DUP3"
    },
    "3802": {
      "op": "MSTORE"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3805": {
      "op": "SWAP1"
    },
    "3806": {
      "op": "DUP3"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "op": "MSTORE"
    },
    "3809": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206E6F6465732061726520616C6C6F77656420746F20657865637574"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3844": {
      "op": "DUP3"
    },
    "3845": {
      "op": "ADD"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH7",
      "value": "0x32903A3434B997"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3857": {
      "op": "SHL"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3860": {
      "op": "DUP3"
    },
    "3861": {
      "op": "ADD"
    },
    "3862": {
      "op": "MSTORE"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "SWAP1"
    },
    "3867": {
      "jump": "o",
      "op": "JUMP"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3876": {
      "op": "SHL"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3879": {
      "op": "MSTORE"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3884": {
      "op": "MSTORE"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3889": {
      "op": "REVERT"
    },
    "3890": {
      "op": "JUMPDEST"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3893": {
      "op": "DUP3"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "LT"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3907": {
      "jump": "i",
      "op": "JUMP"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "op": "SUB"
    },
    "3911": {
      "op": "SWAP1"
    },
    "3912": {
      "jump": "o",
      "op": "JUMP"
    },
    "3913": {
      "op": "JUMPDEST"
    },
    "3914": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3929": {
      "op": "MSTORE"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "REVERT"
    },
    "3935": {
      "op": "JUMPDEST"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "DUP2"
    },
    "3939": {
      "op": "DUP2"
    },
    "3940": {
      "op": "SHR"
    },
    "3941": {
      "op": "SWAP1"
    },
    "3942": {
      "op": "DUP3"
    },
    "3943": {
      "op": "AND"
    },
    "3944": {
      "op": "DUP1"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0xF73"
    },
    "3948": {
      "op": "JUMPI"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "AND"
    },
    "3953": {
      "op": "SWAP2"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "op": "JUMPDEST"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3958": {
      "op": "DUP3"
    },
    "3959": {
      "op": "LT"
    },
    "3960": {
      "op": "DUP2"
    },
    "3961": {
      "op": "SUB"
    },
    "3962": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3965": {
      "op": "JUMPI"
    },
    "3966": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3973": {
      "op": "SHL"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3976": {
      "op": "MSTORE"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3981": {
      "op": "MSTORE"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3986": {
      "op": "REVERT"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "op": "SWAP2"
    },
    "3990": {
      "op": "SWAP1"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "jump": "o",
      "op": "JUMP"
    },
    "3993": {
      "op": "JUMPDEST"
    },
    "3994": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4001": {
      "op": "SHL"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4009": {
      "op": "MSTORE"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4014": {
      "op": "REVERT"
    },
    "4015": {
      "op": "JUMPDEST"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4018": {
      "op": "DUP3"
    },
    "4019": {
      "op": "NOT"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "GT"
    },
    "4022": {
      "op": "ISZERO"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0xFC2"
    },
    "4026": {
      "op": "JUMPI"
    },
    "4027": {
      "op": "PUSH2",
      "value": "0xFC2"
    },
    "4030": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "4033": {
      "jump": "i",
      "op": "JUMP"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "SWAP1"
    },
    "4038": {
      "jump": "o",
      "op": "JUMP"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4042": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4047": {
      "op": "DUP1"
    },
    "4048": {
      "op": "DUP4"
    },
    "4049": {
      "op": "AND"
    },
    "4050": {
      "op": "DUP2"
    },
    "4051": {
      "op": "DUP6"
    },
    "4052": {
      "op": "AND"
    },
    "4053": {
      "op": "DUP1"
    },
    "4054": {
      "op": "DUP4"
    },
    "4055": {
      "op": "SUB"
    },
    "4056": {
      "op": "DUP3"
    },
    "4057": {
      "op": "GT"
    },
    "4058": {
      "op": "ISZERO"
    },
    "4059": {
      "op": "PUSH2",
      "value": "0xFE6"
    },
    "4062": {
      "op": "JUMPI"
    },
    "4063": {
      "op": "PUSH2",
      "value": "0xFE6"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "4069": {
      "jump": "i",
      "op": "JUMP"
    },
    "4070": {
      "op": "JUMPDEST"
    },
    "4071": {
      "op": "ADD"
    },
    "4072": {
      "op": "SWAP5"
    },
    "4073": {
      "op": "SWAP4"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "op": "POP"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "754eac56f0c6bcbafb2396117b7e734cd7928aa6",
  "source": "// SPDX-License-Identifier: GPL3\npragma solidity ^0.8.0;\n\n/**\n * @dev Reference data providers in the project and their requests to join the project\n */\ncontract DataProviders {\n    // Data provider entity (node)\n    struct Node {\n        address _address;\n        bool activated;\n        // Shared secret between nodes\n        // TODO: test if splitting into bytes32 is cheaper\n        bytes[112] secret;\n        // Entry state represents at which iteration node joined\n        uint entryKeyTurn;\n    }\n\n    struct NodeJoinRequest {\n        address _address;\n        bytes32 publicKey;\n    }\n\n    // Mapping node address to index + 4 extra states:\n    // 0 - no request\n    // 1 - pending\n    // 2 - declined\n    // 3 <= i  - represents index i in node array as (i - 3)\n    mapping(address => uint) public nodeState;\n    Node[] public nodesArray;\n    uint32 public activeNodes = 0;\n    uint32 public keyTurn = 0; // Increment on every node join\n\n    // Request are treated as a stack (for simplicity)\n    NodeJoinRequest[] public nodeRequests;\n\n\n    modifier onlyNode {\n        require(\n            isNode(msg.sender),\n            \"Only nodes are allowed to execute this.\"\n        );\n        _;\n    }\n\n    modifier onlyActiveNode {\n        require(\n            isNode(msg.sender) && nodesArray[nodeState[msg.sender] - 3].activated,\n            \"Only nodes that are active are allowed to execute this.\"\n        );\n        _;\n    }\n\n    /**\n     * @notice Check if given address belongs to node\n     * @param _address address to check\n     */\n    function isNode(address _address) public view returns(bool) {\n        return nodeState[_address] >= 3;\n    }\n\n    function getNodesLength() public view returns(uint) {\n        return nodesArray.length;\n    }\n\n    function getNodeRequestsLength() public view returns(uint) {\n        return nodeRequests.length;\n    }\n\n    function getNodeSecret(address _address) public view returns(bytes[112] memory) {\n        require(isNode(_address), \"Address doesn't belong to node\");\n        return nodesArray[nodeState[_address] - 3].secret;\n    }\n\n    /**\n     * @notice Node can request to join providing their public key.\n     * @param publicKey compressed public key value\n     */\n    function requestJoinNode(bytes32 publicKey) public {\n        require(nodeState[msg.sender] == 0, \"Address already made request.\");\n        nodeState[msg.sender] = 1;\n        nodeRequests.push(NodeJoinRequest({\n            _address: msg.sender,\n            publicKey: publicKey\n        }));\n    }\n\n    /**\n     * @notice Accepting first request in the stack\n     * @param secret sharing encrypted common secret for nodes\n\n        TODO: Secret should be updated as hash of previous secret\n              So that the node doesn't have access to previous models\n        TODO: Should not accept node when plan is running\n    */\n    function acceptNode(bytes[112] memory secret) public onlyNode {\n        require(nodeRequests.length > 0, \"No request to process.\");\n        nodeState[nodeRequests[nodeRequests.length - 1]._address] = nodesArray.length + 3;\n\n        keyTurn += 1;\n        nodesArray.push(Node({\n            _address: nodeRequests[nodeRequests.length - 1]._address,\n            activated: true,\n            secret: secret,\n            entryKeyTurn: keyTurn\n        }));\n        activeNodes += 1;\n        nodeRequests.pop();\n    }\n\n    /**\n     * @notice Declining first request in the stack\n     */\n    function declineNode() public onlyNode {\n        require(nodeRequests.length > 0, \"No request to process.\");\n        nodeState[nodeRequests[nodeRequests.length - 1]._address] = 2;\n        nodeRequests.pop();\n    }\n\n    /**\n     * @notice Node activates itself\n     */\n    function activate() public onlyNode {\n        require(\n            !nodesArray[nodeState[msg.sender] - 3].activated,\n            \"Node is already active.\"\n        );\n        nodesArray[nodeState[msg.sender] - 3].activated = true;\n    }\n\n    /**\n     * @notice Node deactivates itself\n     * @dev onlyNode modifier is not required. It is checked inside _deactivateNode(...)\n     */\n    function deactivate() public {\n        _deactivateNode(msg.sender);\n    }\n\n    /**\n     * @notice Deactivate node by address\n     * @dev We will use this later in the training plan - kick inactive nodes\n     * @param _address address of node which should be deactivated\n     */\n    function _deactivateNode(address _address) internal {\n        require(\n            isNode(_address),\n            \"Address is not valid node.\"\n        );\n        require(\n            nodesArray[nodeState[_address] - 3].activated,\n            \"Node is already inactive\"\n        );\n        nodesArray[nodeState[_address] - 3].activated = true;\n    }\n}\n",
  "sourceMap": "153:4568:9:-:0;;;852:29;;;-1:-1:-1;;;;;;887:25:9;;;153:4568;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/project/DataProviders.sol",
  "type": "contract"
}